[
  {
    "id": "00-roadmap/ROADMAP.md",
    "title": "Experience Roadmap",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/00-roadmap/ROADMAP.md",
    "section": "Roadmap",
    "path": "00-roadmap/ROADMAP.md",
    "headings": [
      {
        "level": 1,
        "text": "Experience Roadmap"
      },
      {
        "level": 2,
        "text": "Shipping Now"
      },
      {
        "level": 2,
        "text": "Next 30 Days"
      },
      {
        "level": 2,
        "text": "60–90 Day Horizon"
      },
      {
        "level": 2,
        "text": "Guiding Principles"
      }
    ],
    "excerpt": "# Experience Roadmap Stay transparent about what exists, what is in motion, and what experiments are lined up. Share this with clients, collaborators, or your own AI agents so everyone has the same map. ## Shipping Now - **Experience blueprint refresh.** Harmonised README, Start Here, Experience hub, and navigation cop",
    "content": "# Experience Roadmap Stay transparent about what exists, what is in motion, and what experiments are lined up. Share this with clients, collaborators, or your own AI agents so everyone has the same map. ## Shipping Now - **Experience blueprint refresh.** Harmonised README, Start Here, Experience hub, and navigation copy with persona-first storytelling. - **Agent-ready assets.** Updated SVG infographics, reinforced metadata, and guidance so Codex-style copilots can brief visitors. - **Search + SEO alignment.** Regenerated search index, tuned sitemap, and fortified keyword anchors across core landing pages. ## Next 30 Days - **Persona dashboards.** Interactive cards on the Experience page that surface real-time highlights from learning paths, projects, and governance modules. - **Interactive project filters.** Extend with saved views (RAG, Agentic, Ops) and search presets tuned for exec, architect, and creator intents. - **Governance deep dives.** Expand with procurement guidance, incident response drilldowns, and human-in-the-loop review checklists. - **Agent toolkit.** Package prompt starters, system messages, and evaluation rubrics so teams can deploy internal agents safely. ## 60–90 Day Horizon - **Playground templates.** Bundle minimal repos for each flagship project with dockerised quick starts, CI-ready eval harnesses, and cost dashboards. - **Persona onboarding sequences.** Optional email or chat drip scripts referencing repo content, roadmap milestones, and collaboration rituals. - **Experience analytics.** Surface repo commit velocity, project freshness, and evaluation coverage on homepage pulse cards and README callouts. - **Certification loop.** Design a capstone assessment that blends pattern mastery, governance readiness, and storytelling artefacts. ## Guiding Principles - **Lead with clarity.** Every page answers “what value do I get in five minutes?” - **Ship in loops.** Pattern → Project → Evaluation → Story is the default development cadence. - **Sta"
  },
  {
    "id": "01-design-patterns/README.md",
    "title": "Design Pattern Library",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/README.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Design Pattern Library"
      }
    ],
    "excerpt": "# Design Pattern Library - Customer Experience: Content Generation, Language Understanding, Personalization, Conversational Commerce - Decision Support & Workflow: Decision Support, Orchestration Workflow, Predictive Operations, Autonomous Optimization - Platform Enablement: Rapid Innovation, Security & Compliance, Syn",
    "content": "# Design Pattern Library - Customer Experience: Content Generation, Language Understanding, Personalization, Conversational Commerce - Decision Support & Workflow: Decision Support, Orchestration Workflow, Predictive Operations, Autonomous Optimization - Platform Enablement: Rapid Innovation, Security & Compliance, Synthetic Data - AI Infrastructure: Multicloud Orchestration, Model Lifecycle Management, Governance Compliance, Performance Optimization - Industry: Insurance Rate Modeling, Energy, Cyber, Genomics, GIS See each pattern file for value, architecture, discovery, BoM, and risks."
  },
  {
    "id": "01-design-patterns/content-generation.md",
    "title": "Content Generation",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/content-generation.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/content-generation.md",
    "headings": [
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Content Generation ## Business Value - Scale on-brand content across channels while reducing cycle time and review burden. - Personalize by segment or user with measurable uplift and clear governance. ## Technical Architecture - Inputs: brief, product data, style guide -> orchestrator (workflow engine) - Ret",
    "content": "# Pattern: Content Generation ## Business Value - Scale on-brand content across channels while reducing cycle time and review burden. - Personalize by segment or user with measurable uplift and clear governance. ## Technical Architecture - Inputs: brief, product data, style guide -> orchestrator (workflow engine) - Retrieval: product knowledge base and policies via RAG -> LLM with prompt templates - Guardrails: PII redaction, policy checks, toxicity and bias filters - Human-in-the-loop: reviewer UI with diffs -> CMS publish - Observability: traces, costs, evaluation datasets (faithfulness and style) ## Discovery Questions - What sources of truth and brand or style constraints exist? - Which channels (email, web, ads) and localization needs are in scope? - What approval workflow, audit trail, and retention requirements apply? ## Bill of Materials - Vector store (pgvector on Supabase), OpenAI (smaller plus reviewer-quality models), workflow runtime (Temporal or Prefect), CMS connector - Observability (Langfuse) and a policy checker (Open Policy Agent or custom) ## Risks & Controls - Hallucinations -> enforce grounding, require citations, abstain on low confidence - Brand drift -> apply style constraints, reviewer gates, and A/B tests - PII leakage -> add redaction, policy enforcement, and logging with access controls"
  },
  {
    "id": "01-design-patterns/decision-support.md",
    "title": "Decision Support",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/decision-support.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/decision-support.md",
    "headings": [
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Decision Support ## Business Value - Deliver faster, higher-quality decisions with transparent evidence and what-if analysis. ## Technical Architecture - Data pipelines -> feature store -> retrieval over facts and policies - LLM reasoning augmented with tools for simulation and scenario analysis - Explanatio",
    "content": "# Pattern: Decision Support ## Business Value - Deliver faster, higher-quality decisions with transparent evidence and what-if analysis. ## Technical Architecture - Data pipelines -> feature store -> retrieval over facts and policies - LLM reasoning augmented with tools for simulation and scenario analysis - Explanation layer with citations, stated assumptions, and confidence scoring - Feedback loop that captures outcomes to improve future recommendations ## Discovery Questions - What decision cadence, owners, and tolerable risk levels are in play? - Which policies, regulations, and source systems of record apply? - What auditability, sign-off, and retention processes are required? ## Bill of Materials - Data warehouse plus feature store, pgvector, OpenAI, tool runner for simulations, user interface, logging and tracing, approval workflow ## Risks & Controls - Over-trust -> show citations and confidence; require human approval - Data drift -> monitor inputs and accuracy; schedule recalibration - Compliance -> retain decisions and rationale with strict access controls"
  },
  {
    "id": "01-design-patterns/energy-market-trading-optimization.md",
    "title": "Pattern: Energy Market Trading & Optimization",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/energy-market-trading-optimization.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/energy-market-trading-optimization.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Energy Market Trading & Optimization"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Energy Market Trading & Optimization ## Business Value - Optimize bids and dispatch, reduce imbalance costs, and improve profitability. ## Technical Architecture - Time-series ingestion (prices, generation, demand) → forecasting models - Optimization layer (linear/convex) with constraints and risk - Scenario",
    "content": "# Pattern: Energy Market Trading & Optimization ## Business Value - Optimize bids and dispatch, reduce imbalance costs, and improve profitability. ## Technical Architecture - Time-series ingestion (prices, generation, demand) → forecasting models - Optimization layer (linear/convex) with constraints and risk - Scenario simulation with LLM-assisted narrative reports ## Discovery Questions - Markets (day-ahead, intraday), assets, and constraints? - Risk appetite and KPIs (P&L, imbalance, penalties)? - Latency requirements and decision cadence? ## Bill of Materials - TS DB, forecasting libs, optimizer, dashboards, audit logs ## Risks & Controls - Forecast error → ensembles and recalibration; backtesting - Compliance → market rules encoded; auditability"
  },
  {
    "id": "01-design-patterns/genomic-sequence-processing.md",
    "title": "Pattern: Genomic Sequence Processing & Public Health",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/genomic-sequence-processing.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/genomic-sequence-processing.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Genomic Sequence Processing & Public Health"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Genomic Sequence Processing & Public Health ## Business Value - Accelerate genomic analyses for surveillance and research while ensuring privacy. ## Technical Architecture - Pipelines for sequence alignment, variant calling, annotation - Secure compute and storage; de-identification; access controls - LLM-as",
    "content": "# Pattern: Genomic Sequence Processing & Public Health ## Business Value - Accelerate genomic analyses for surveillance and research while ensuring privacy. ## Technical Architecture - Pipelines for sequence alignment, variant calling, annotation - Secure compute and storage; de-identification; access controls - LLM-assisted report generation with strict grounding ## Discovery Questions - Data volumes and turnaround time? - Privacy and regulatory requirements (HIPAA/GDPR)? - Collaboration and data sharing needs? ## Bill of Materials - HPC/Cloud compute, genomics toolchain, secure storage, audit logs ## Risks & Controls - Privacy breach → de-identification, access policies - Reproducibility → versioned pipelines and datasets"
  },
  {
    "id": "01-design-patterns/gis-intelligence.md",
    "title": "Pattern: Geographic Information Systems (GIS) Intelligence",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/gis-intelligence.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/gis-intelligence.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Geographic Information Systems (GIS) Intelligence"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Geographic Information Systems (GIS) Intelligence ## Business Value - Optimize network planning, routing, and asset management with spatial insights. ## Technical Architecture - Spatial data ingestion (satellite, maps, sensors) → vector tiles/DB - Spatial queries + ML models; LLM for natural language spatial",
    "content": "# Pattern: Geographic Information Systems (GIS) Intelligence ## Business Value - Optimize network planning, routing, and asset management with spatial insights. ## Technical Architecture - Spatial data ingestion (satellite, maps, sensors) → vector tiles/DB - Spatial queries + ML models; LLM for natural language spatial queries - Visualization and decision support dashboards ## Discovery Questions - Spatial sources and licensing? Update cadence? - Accuracy and resolution required for decisions? - Integration with existing GIS tools? ## Bill of Materials - Spatial DB (PostGIS), tile server, ML libs, visualization ## Risks & Controls - Licensing and privacy → data governance - Accuracy → QA pipelines and error bounds"
  },
  {
    "id": "01-design-patterns/governance-compliance.md",
    "title": "Pattern: Governance Compliance",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/governance-compliance.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/governance-compliance.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Governance Compliance"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Governance Compliance ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -",
    "content": "# Pattern: Governance Compliance ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -"
  },
  {
    "id": "01-design-patterns/insurance-rate-modeling.md",
    "title": "Insurance Rate Modeling",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/insurance-rate-modeling.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/insurance-rate-modeling.md",
    "headings": [
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Insurance Rate Modeling ## Business Value - Improve pricing accuracy and risk segmentation, reduce loss ratios, and stay compliant. ## Technical Architecture - Data ingestion (policies, claims, external data) -> feature store - Modeling: gradient boosting or GLMs plus optional LLM document understanding - Mo",
    "content": "# Pattern: Insurance Rate Modeling ## Business Value - Improve pricing accuracy and risk segmentation, reduce loss ratios, and stay compliant. ## Technical Architecture - Data ingestion (policies, claims, external data) -> feature store - Modeling: gradient boosting or GLMs plus optional LLM document understanding - Monitoring: drift, performance, and fairness metrics - Governance: audit trails, explainability (SHAP), approval workflows ## Discovery Questions - Which lines of business and regulatory constraints apply? - What data freshness and external sources (credit, weather, telematics) are required? - What explainability requirements and rate filing processes must be supported? ## Bill of Materials - Data warehouse plus feature store, model registry, monitoring and evaluations, explainability toolkit ## Risks & Controls - Bias and fairness -> add constraints, audits, and segment holdouts - Data quality -> enforce validation, SLAs, and incident playbooks"
  },
  {
    "id": "01-design-patterns/model-lifecycle-management.md",
    "title": "Model Lifecycle Management",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/model-lifecycle-management.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/model-lifecycle-management.md",
    "headings": [
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Model Lifecycle Management (MLOps) ## Business Value - Ship reliable models and prompts with traceability, faster iteration, and controlled risk and cost. ## Technical Architecture - Data and versioning -> training and evaluation -> model or prompt registry -> deploy -> monitor - LLM applications: prompt reg",
    "content": "# Pattern: Model Lifecycle Management (MLOps) ## Business Value - Ship reliable models and prompts with traceability, faster iteration, and controlled risk and cost. ## Technical Architecture - Data and versioning -> training and evaluation -> model or prompt registry -> deploy -> monitor - LLM applications: prompt registry, RAG datasets, evaluation harness wired into CI - Release strategies: canary, shadow, rollback, with budget and latency SLOs ## Discovery Questions - What release cadence, rollback strategy, and ownership model exist? - What data lineage, retention, and redaction policies apply? - Which latency, cost, and quality SLOs or budgets govern each tier? ## Bill of Materials - Model or prompt registry (MLflow, Weights & Biases), CI runner, deployment targets, tracing (Langfuse), metrics stack ## Risks & Controls - Regression risk -> evaluation gates in CI plus prompt/model versioning - Cost creep -> budget alerts, autoscaling, caching - Compliance -> audit logs, signed artifacts, access policies"
  },
  {
    "id": "01-design-patterns/orchestration-workflow.md",
    "title": "Pattern: Orchestration Workflow",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/orchestration-workflow.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/orchestration-workflow.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Orchestration Workflow"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Orchestration Workflow ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -",
    "content": "# Pattern: Orchestration Workflow ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -"
  },
  {
    "id": "01-design-patterns/performance-optimization.md",
    "title": "Pattern: Performance Optimization",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/performance-optimization.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/performance-optimization.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: Performance Optimization"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: Performance Optimization ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -",
    "content": "# Pattern: Performance Optimization ## Business Value - ## Technical Architecture - ## Discovery Questions - ## Bill of Materials - ## Risks & Controls -"
  },
  {
    "id": "01-design-patterns/vulnerability-management.md",
    "title": "Pattern: AI-Powered Vulnerability Management",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/01-design-patterns/vulnerability-management.md",
    "section": "Design Patterns",
    "path": "01-design-patterns/vulnerability-management.md",
    "headings": [
      {
        "level": 1,
        "text": "Pattern: AI-Powered Vulnerability Management"
      },
      {
        "level": 2,
        "text": "Business Value"
      },
      {
        "level": 2,
        "text": "Technical Architecture"
      },
      {
        "level": 2,
        "text": "Discovery Questions"
      },
      {
        "level": 2,
        "text": "Bill of Materials"
      },
      {
        "level": 2,
        "text": "Risks & Controls"
      }
    ],
    "excerpt": "# Pattern: AI-Powered Vulnerability Management ## Business Value - Reduce mean-time-to-detect and patch risk by prioritizing critical vulnerabilities. ## Technical Architecture - Ingest CVEs, asset inventory, scanner outputs → risk scoring model - LLM triage assistant with source links; ticketing integration - Dashboar",
    "content": "# Pattern: AI-Powered Vulnerability Management ## Business Value - Reduce mean-time-to-detect and patch risk by prioritizing critical vulnerabilities. ## Technical Architecture - Ingest CVEs, asset inventory, scanner outputs → risk scoring model - LLM triage assistant with source links; ticketing integration - Dashboards for coverage, SLA, and patch impact ## Discovery Questions - Asset inventory completeness and exposure? - Patch windows and change controls? - Compliance frameworks (SOC2, ISO, NIST)? ## Bill of Materials - Data store, scanners integrations, LLM, dashboards, ticketing ## Risks & Controls - False prioritization → feedback loop; audit trail - Sensitive data → access controls and redaction"
  },
  {
    "id": "02-learning-paths/100-hour-ai-architect.md",
    "title": "100‑Hour AI Architect Plan",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/02-learning-paths/100-hour-ai-architect.md",
    "section": "Learning Paths",
    "path": "02-learning-paths/100-hour-ai-architect.md",
    "headings": [
      {
        "level": 1,
        "text": "100‑Hour AI Architect Plan"
      },
      {
        "level": 2,
        "text": "Who This Path Serves"
      },
      {
        "level": 2,
        "text": "Outcomes You Will Ship"
      },
      {
        "level": 2,
        "text": "Operating Rhythm"
      },
      {
        "level": 2,
        "text": "Week 1 — Foundations & Discovery (25h)"
      },
      {
        "level": 2,
        "text": "Week 2 — Systems & Observability (25h)"
      },
      {
        "level": 2,
        "text": "Week 3 — Governance, Performance, and Trust (25h)"
      },
      {
        "level": 2,
        "text": "Week 4 — Specialization & Launch Narrative (25h)"
      },
      {
        "level": 2,
        "text": "Evidence Packet Checklist"
      },
      {
        "level": 2,
        "text": "Agent Co-Pilot Brief (Copy into Your Assistant)"
      },
      {
        "level": 2,
        "text": "Stretch Extensions"
      }
    ],
    "excerpt": "# 100‑Hour AI Architect Plan Four focused sprints (≈25 hours each) to prove you can design, ship, and narrate production‑grade AI systems. Every milestone maps to an artifact you can show clients, leaders, or your personal audience. ## Who This Path Serves - **Rising AI Architects** who want a credible portfolio within",
    "content": "# 100‑Hour AI Architect Plan Four focused sprints (≈25 hours each) to prove you can design, ship, and narrate production‑grade AI systems. Every milestone maps to an artifact you can show clients, leaders, or your personal audience. ## Who This Path Serves - **Rising AI Architects** who want a credible portfolio within a month. - **Creators & Influencers** who will remix the build into talks, streams, or newsletters. - **Codex‑style agents** operating beside you—each week includes explicit tasking for an AI copilot. ## Outcomes You Will Ship - A resilient [RAG on Supabase](../05-projects/rag-on-supabase.md) demo with hybrid search, evals, and observability wired in. - A repeatable eval harness drawing from [Langfuse guidance](../05-projects/evals-langfuse.md) and the [07-evaluation/](../07-evaluation/) toolkit. - A governance one‑pager referencing [privacy](../08-governance/privacy-gdpr.md) and [model risk](../08-governance/model-risk.md) playbooks. - A polished story: architecture diagram, metrics, cost sheet, and launch post. ## Operating Rhythm - **Cadence:** 5 working sessions (~3 hours) + 1 reflection/publishing block (~10 hours) per week. - **Source of truth:** Maintain a in your clone; append daily decisions, prompts, and links. - **AI copilots:** Load , [START-HERE.md](../START-HERE.md), this plan, and the project docs into your agent context before each sprint. --- ## Week 1 — Foundations & Discovery (25h) | Track | Human Focus | Assign to Your AI Agent | Ship This Week | | --- | --- | --- | --- | | Patterns & Vocabulary (6h) | Skim [content generation](../01-design-patterns/content-generation.md), [decision support](../01-design-patterns/decision-support.md), and [awesome RAG](../03-awesome/awesome-rag.md). Capture 10 insights in your journal. | Summarize each pattern into stakeholder-friendly bullets; draft glossary cards. | 1-page “North Star” brief + glossary snippet. | | Data & Retrieval (8h) | Work through [vector-search-pgvector](../05-projects/vecto"
  },
  {
    "id": "02-learning-paths/agentic-code-swarms.md",
    "title": "Learning Path: Agentic Code Swarms",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/02-learning-paths/agentic-code-swarms.md",
    "section": "Learning Paths",
    "path": "02-learning-paths/agentic-code-swarms.md",
    "headings": [
      {
        "level": 1,
        "text": "Learning Path: Agentic Code Swarms"
      },
      {
        "level": 2,
        "text": "Who This Path Is For"
      },
      {
        "level": 2,
        "text": "Program Outcomes"
      },
      {
        "level": 2,
        "text": "Time & Prerequisites"
      },
      {
        "level": 2,
        "text": "Orientation (1 Hour)"
      },
      {
        "level": 2,
        "text": "Module Breakdown"
      },
      {
        "level": 2,
        "text": "Advanced Labs & Challenges"
      },
      {
        "level": 2,
        "text": "Governance & Safety Considerations"
      },
      {
        "level": 2,
        "text": "Demo & Storytelling Kit"
      },
      {
        "level": 2,
        "text": "Success Criteria"
      }
    ],
    "excerpt": "# Learning Path: Agentic Code Swarms Mobilize a multi-agent development crew that can plan, build, critique, and ship alongside you. This path transforms the workspace into a production-ready lab with observability, tooling, and governance layered in. ## Who This Path Is For - AI architects and platform engineers who a",
    "content": "# Learning Path: Agentic Code Swarms Mobilize a multi-agent development crew that can plan, build, critique, and ship alongside you. This path transforms the workspace into a production-ready lab with observability, tooling, and governance layered in. ## Who This Path Is For - AI architects and platform engineers who already ship RAG or LLM features and want resilient automation. - Product leaders validating multi-agent workflows before rolling out to teams. - Codex, Claude Code, Cursor, or GitHub Copilot X users eager to orchestrate agents as collaborators. ## Program Outcomes - A configurable swarm (planner → builder → reviewer → critic) with robust prompting, retries, and evaluation hooks. - A Streamlit-based control room that visualizes conversations, decisions, and telemetry. - Runbooks, guardrails, and governance ready for enterprise adoption. ## Time & Prerequisites - **Estimated time:** 12–18 focused hours (self-paced or weekend intensive). - **Stack:** Python 3.11, optional LiteLLM provider keys, Node.js if customizing UI assets. - **Pre-work:** Review [awesome-agents](../03-awesome/awesome-agents.md), [docs/topics/agents.html](../docs/topics/agents.html), and the [Bootcamp Path](bootcamp.md) governance cues. --- ## Orientation (1 Hour) - Read and map folder structure to the [experience map](../assets/experience-map.svg). - Configure a to log experiments, prompts, and metrics; invite your AI agent to append summaries after every run. - Run to validate environment and inspect message traces. --- ## Module Breakdown | Module | Focus | Human Lead | AI Agent Partner | Deliverables | | --- | --- | --- | --- | --- | | 1. Patterns & Roles (1h) | Study coordination strategies (sequential, round robin, planner–worker–reviewer) using . | Document strengths/risks per pattern, annotate code. | Summaries + decision tree for when to use each pattern. | | 2. Core Setup (1h) | Configure virtual env, , LiteLLM provider routing. | Generate , provider comparison, and onboardi"
  },
  {
    "id": "02-learning-paths/beginner.md",
    "title": "Beginner Path — Launch Your AI Architect Journey (4 Weeks)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/02-learning-paths/beginner.md",
    "section": "Learning Paths",
    "path": "02-learning-paths/beginner.md",
    "headings": [
      {
        "level": 1,
        "text": "Beginner Path — Launch Your AI Architect Journey (4 Weeks)"
      },
      {
        "level": 2,
        "text": "What You’ll Walk Away With"
      },
      {
        "level": 2,
        "text": "Weekly Flow Snapshot"
      },
      {
        "level": 2,
        "text": "Week 1 — Foundations, Prompts, and Responsible Use"
      },
      {
        "level": 2,
        "text": "Week 2 — Retrieval & Structured Knowledge"
      },
      {
        "level": 2,
        "text": "Week 3 — Agents, Workflows, and Collaboration Rituals"
      },
      {
        "level": 2,
        "text": "Week 4 — Evaluation, Observability, and Launch Narrative"
      },
      {
        "level": 2,
        "text": "Support Kit & Continuing Momentum"
      }
    ],
    "excerpt": "# Beginner Path — Launch Your AI Architect Journey (4 Weeks) This path is a guided on-ramp for creators, product strategists, and fast-learning engineers who want to demo real value in 30 days. Every week blends foundational theory, hands-on build time, and narrative polish so your audience, clients, and Codex-style ag",
    "content": "# Beginner Path — Launch Your AI Architect Journey (4 Weeks) This path is a guided on-ramp for creators, product strategists, and fast-learning engineers who want to demo real value in 30 days. Every week blends foundational theory, hands-on build time, and narrative polish so your audience, clients, and Codex-style agents all know how to collaborate with you. ## What You’ll Walk Away With - Confidence briefing stakeholders using stories from [START-HERE.md](../START-HERE.md) and the brand tone in [BRAND-VOICE.md](../BRAND-VOICE.md). - A working retrieval-augmented application, shipped incrementally using [RAG on Supabase](../05-projects/rag-on-supabase.md) as the spine. - Evaluation reports, guardrails, and documentation ready to hand to a leader or publish online. - An onboarding kit so your AI copilots can continue iterating after the 4-week sprint. ## Weekly Flow Snapshot - **Monday–Tuesday:** Learn concepts, curate research using [03-awesome](../03-awesome/). - **Wednesday–Thursday:** Ship code and docs; pair with your AI agent on repetitive tasks. - **Friday:** Publish a recap and review metrics. - **Weekend (optional):** Tinker, record demos, gather community feedback. --- ## Week 1 — Foundations, Prompts, and Responsible Use | Focus | Human Lead | AI Agent Partner | Outputs | | --- | --- | --- | --- | | LLM Concepts | Study transformer basics, context windows, and prompting strategies from [awesome-llms](../03-awesome/awesome-llms.md). Summarize in your own words. | Create flashcards and stakeholder analogies for each concept. | 1-page explainer + glossary snippets for your journal. | | Prompt Systems | Follow [content-generation pattern](../01-design-patterns/content-generation.md) and build a simple prompt chaining notebook. | Suggest variations, guardrails, and evaluation prompts. | Notebook pushed to repo with commentary. | | Safety & Ethics | Review [docs/topics/guardrails.html](../docs/topics/guardrails.html) and [privacy-gdpr.md](../08-governance/priv"
  },
  {
    "id": "02-learning-paths/bootcamp.md",
    "title": "Bootcamp Path — AI Center of Excellence Launch Plan (3 Weeks)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/02-learning-paths/bootcamp.md",
    "section": "Learning Paths",
    "path": "02-learning-paths/bootcamp.md",
    "headings": [
      {
        "level": 1,
        "text": "Bootcamp Path — AI Center of Excellence Launch Plan (3 Weeks)"
      },
      {
        "level": 2,
        "text": "Audience & Prerequisites"
      },
      {
        "level": 2,
        "text": "Guiding Outcomes"
      },
      {
        "level": 2,
        "text": "Week 1 — Align Vision, Personas, and Customer Experience"
      },
      {
        "level": 2,
        "text": "Week 2 — Architecture, Data Platforms, and Governance Foundations"
      },
      {
        "level": 2,
        "text": "Week 3 — Agents, Enablement, and Enterprise Rollout"
      },
      {
        "level": 2,
        "text": "Sustain & Scale"
      }
    ],
    "excerpt": "# Bootcamp Path — AI Center of Excellence Launch Plan (3 Weeks) Designing an enterprise AI program demands fast wins, shared language, and governance maturity. This bootcamp equips leaders, product strategists, and solution architects with a 21-day sprint to align stakeholders, prove value, and publish an execution roa",
    "content": "# Bootcamp Path — AI Center of Excellence Launch Plan (3 Weeks) Designing an enterprise AI program demands fast wins, shared language, and governance maturity. This bootcamp equips leaders, product strategists, and solution architects with a 21-day sprint to align stakeholders, prove value, and publish an execution roadmap that teams can clone. ## Audience & Prerequisites - You lead or advise an AI Center of Excellence, platform team, or innovation guild. - You can commit ~15 focused hours per week (mix of workshops, asynchronous study, and build time). - You have a Codex-style agent or research assistant ready to summarize docs, draft comms, and run lightweight analyses. ## Guiding Outcomes - Shared vocabulary anchored in [BRAND-VOICE.md](../BRAND-VOICE.md) and [START-HERE.md](../START-HERE.md). - Two validated use cases with supporting prototypes (RAG + agentic workflow) tied to business KPIs. - A governance, risk, and compliance (GRC) framework referencing [08-governance](../08-governance/) materials. - A 90-day execution roadmap backed by metrics, budget, and enablement plans. --- ## Week 1 — Align Vision, Personas, and Customer Experience | Day | Focus | Human Leadership | Assign to Your AI Agent | Deliverable | | --- | --- | --- | --- | --- | | Day 1 | Kickoff Narrative | Run an orientation using [docs/experience.html](../docs/experience.html). Capture stakeholder goals and fears. | Draft meeting summary, decision log, and glossary updates. | Alignment brief + stakeholder map. | | Day 2 | Persona Workshops | Map internal personas using [experience-map.svg](../assets/experience-map.svg) and [16-collaboration](../16-collaboration/) rituals. | Produce persona one-pagers and empathy maps. | Persona deck + engagement plan. | | Day 3 | Opportunity Discovery | Facilitate value mapping with [workshop-agenda.md](../04-templates/workshop-agenda.md). Identify top 3 use cases. | Score ideas using impact/effort analysis referencing [docs/topics/value-loop.svg](../assets/va"
  },
  {
    "id": "02-learning-paths/professional.md",
    "title": "Professional Path — Architecting End-to-End AI Platforms (6 Weeks)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/02-learning-paths/professional.md",
    "section": "Learning Paths",
    "path": "02-learning-paths/professional.md",
    "headings": [
      {
        "level": 1,
        "text": "Professional Path — Architecting End-to-End AI Platforms (6 Weeks)"
      },
      {
        "level": 2,
        "text": "Strategic Goals"
      },
      {
        "level": 2,
        "text": "Structure & Commitments"
      },
      {
        "level": 2,
        "text": "Week 1 — Enterprise Discovery & Portfolio Setup"
      },
      {
        "level": 2,
        "text": "Week 2 — Data, Retrieval, and Knowledge Fabric"
      },
      {
        "level": 2,
        "text": "Week 3 — Application Platform & Agentic Workflows"
      },
      {
        "level": 2,
        "text": "Week 4 — Observability, Evaluation, and Reliability Engineering"
      },
      {
        "level": 2,
        "text": "Week 5 — Governance, Compliance, and Product Operations"
      },
      {
        "level": 2,
        "text": "Week 6 — Commercialization, Enablement, and Launch Narrative"
      },
      {
        "level": 2,
        "text": "Performance Metrics & Evidence"
      },
      {
        "level": 2,
        "text": "Transition Plan"
      }
    ],
    "excerpt": "# Professional Path — Architecting End-to-End AI Platforms (6 Weeks) For senior builders, consultants, and product leaders ready to operate as cross-functional AI architects. This curriculum pairs deep technical builds with executive-ready storytelling and operational rigor. Treat it as a live residency: each week you ",
    "content": "# Professional Path — Architecting End-to-End AI Platforms (6 Weeks) For senior builders, consultants, and product leaders ready to operate as cross-functional AI architects. This curriculum pairs deep technical builds with executive-ready storytelling and operational rigor. Treat it as a live residency: each week you will ship artifacts, run stakeholder reviews, and leave breadcrumbs for your Codex-style agents to accelerate the next sprint. ## Strategic Goals - Stand up a modular AI platform spanning ingestion, orchestration, evaluation, and governance. - Develop a reusable playbook for launching, scaling, and monitoring AI-powered products. - Produce executive narratives, pricing models, and enablement content that drive adoption. - Cultivate an agent workforce capable of handling research, documentation, and automation tasks alongside you. ## Structure & Commitments - **Duration:** 6 weeks, ~20 hours per week. - **Operating Rhythm:** Monday strategy review, Tuesday–Thursday build blocks, Friday validation + publishing. Maintain a living roadmap referencing [00-roadmap/ROADMAP.md](../00-roadmap/ROADMAP.md). - **Source of Truth:** folder in your repo clone containing architecture, prompts, evaluations, and comms. --- ## Week 1 — Enterprise Discovery & Portfolio Setup - **Human Focus:** Conduct discovery interviews using [04-templates/discovery-questions.md](../04-templates/discovery-questions.md); map stakeholders with [experience-map.svg](../assets/experience-map.svg); inventory current systems. - **AI Agent Tasks:** Summarize transcripts, highlight blockers, and propose opportunity statements referencing [03-awesome/awesome-aggregators.md](../03-awesome/awesome-aggregators.md). - **Deliverables:** Discovery report, stakeholder map, prioritized use case backlog, and communication plan rooted in [BRAND-VOICE.md](../BRAND-VOICE.md). --- ## Week 2 — Data, Retrieval, and Knowledge Fabric - **Human Focus:** Design ingestion pipelines, taxonomies, and metadata strategi"
  },
  {
    "id": "03-awesome/awesome-agents.md",
    "title": "Awesome Agents",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-agents.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-agents.md",
    "headings": [],
    "excerpt": "# Awesome Agents | Link | Why it matters | |---|---| | [microsoft/autogen](https://github.com/microsoft/autogen) | Multi-agent framework with tool support | | [joaomdmoura/crewai](https://github.com/joaomdmoura/crewai) | Agent teams and orchestration | | [langchain-ai/langgraph](https://github.com/langchain-ai/langgrap",
    "content": "# Awesome Agents | Link | Why it matters | |---|---| | [microsoft/autogen](https://github.com/microsoft/autogen) | Multi-agent framework with tool support | | [joaomdmoura/crewai](https://github.com/joaomdmoura/crewai) | Agent teams and orchestration | | [langchain-ai/langgraph](https://github.com/langchain-ai/langgraph) | Deterministic agent graphs for complex flows |"
  },
  {
    "id": "03-awesome/awesome-aggregators.md",
    "title": "Awesome Aggregators (Meta Lists)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-aggregators.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-aggregators.md",
    "headings": [
      {
        "level": 1,
        "text": "Awesome Aggregators (Meta Lists)"
      }
    ],
    "excerpt": "# Awesome Aggregators (Meta Lists) High-signal GitHub repos that aggregate the best resources. - sindresorhus/awesome — The canonical index of curated “awesome” lists across topics - awesome-machine-learning/awesome-machine-learning — Curated machine learning resources and libraries - visenger/awesome-mlops — Curated M",
    "content": "# Awesome Aggregators (Meta Lists) High-signal GitHub repos that aggregate the best resources. - sindresorhus/awesome — The canonical index of curated “awesome” lists across topics - awesome-machine-learning/awesome-machine-learning — Curated machine learning resources and libraries - visenger/awesome-mlops — Curated MLOps tools, articles, and best practices - eugeneyan/applied-ml — Applied ML reading list (papers, blog posts, case studies) - papers-we-love/papers-we-love — Foundational computer science and systems papers - f/awesome-chatgpt-prompts — Community prompts and examples for ChatGPT-style models - e2b-dev/awesome-ai-agents — Curated list of AI agent frameworks and tooling Notes - Prefer recent, maintained lists; check stars and last update. - When adding links from these lists, include 1–2 lines on why they matter."
  },
  {
    "id": "03-awesome/awesome-evals.md",
    "title": "Awesome Evals",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-evals.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-evals.md",
    "headings": [],
    "excerpt": "# Awesome Evals | Link | Why it matters | |---|---| | [langfuse/langfuse](https://github.com/langfuse/langfuse) | Traces, evaluations, and cost tracking | | [Arize-ai/phoenix](https://github.com/Arize-ai/phoenix) | Model and LLM analysis plus evaluation | | [promptfoo/promptfoo](https://github.com/promptfoo/promptfoo) ",
    "content": "# Awesome Evals | Link | Why it matters | |---|---| | [langfuse/langfuse](https://github.com/langfuse/langfuse) | Traces, evaluations, and cost tracking | | [Arize-ai/phoenix](https://github.com/Arize-ai/phoenix) | Model and LLM analysis plus evaluation | | [promptfoo/promptfoo](https://github.com/promptfoo/promptfoo) | Prompt evaluations in CI workflows | | [openai/evals](https://github.com/openai/evals) | Evaluation framework with reusable datasets | | [microsoft/promptflow](https://github.com/microsoft/promptflow) | Flow evaluation, orchestration, and tracking |"
  },
  {
    "id": "03-awesome/awesome-llms.md",
    "title": "Awesome Llms",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-llms.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-llms.md",
    "headings": [],
    "excerpt": "# Awesome LLMs | Link | Why it matters | |---|---| | [huggingface/transformers](https://github.com/huggingface/transformers) | Core models and tokenizers for NLP and LLM work | | [ggerganov/llama.cpp](https://github.com/ggerganov/llama.cpp) | Run models locally on CPU and edge devices | | [vllm-project/vllm](https://gi",
    "content": "# Awesome LLMs | Link | Why it matters | |---|---| | [huggingface/transformers](https://github.com/huggingface/transformers) | Core models and tokenizers for NLP and LLM work | | [ggerganov/llama.cpp](https://github.com/ggerganov/llama.cpp) | Run models locally on CPU and edge devices | | [vllm-project/vllm](https://github.com/vllm-project/vllm) | High-throughput, low-latency model serving | | [ollama/ollama](https://github.com/ollama/ollama) | Local model runtime and packaging | | [openai/openai-python](https://github.com/openai/openai-python) | Official Python SDK for OpenAI APIs | | [openai/openai-cookbook](https://github.com/openai/openai-cookbook) | Production patterns and practical examples |"
  },
  {
    "id": "03-awesome/awesome-mlops.md",
    "title": "Awesome Mlops",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-mlops.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-mlops.md",
    "headings": [],
    "excerpt": "# Awesome MLOps | Link | Why it matters | |---|---| | [ray-project/ray](https://github.com/ray-project/ray) | Distributed compute for Python and LLM workloads | | [PrefectHQ/prefect](https://github.com/PrefectHQ/prefect) | Modern workflow orchestration | | [temporalio/sdk-typescript](https://github.com/temporalio/sdk-t",
    "content": "# Awesome MLOps | Link | Why it matters | |---|---| | [ray-project/ray](https://github.com/ray-project/ray) | Distributed compute for Python and LLM workloads | | [PrefectHQ/prefect](https://github.com/PrefectHQ/prefect) | Modern workflow orchestration | | [temporalio/sdk-typescript](https://github.com/temporalio/sdk-typescript) | Durable workflows with strong guarantees | | [flyteorg/flyte](https://github.com/flyteorg/flyte) | ML orchestrator built for scale | | [dagster-io/dagster](https://github.com/dagster-io/dagster) | Data and ML orchestration | | [mlflow/mlflow](https://github.com/mlflow/mlflow) | Experiment tracking and model registry | | [bentoml/BentoML](https://github.com/bentoml/BentoML) | Packaging and serving toolkit |"
  },
  {
    "id": "03-awesome/awesome-rag.md",
    "title": "Awesome Rag",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-rag.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-rag.md",
    "headings": [],
    "excerpt": "# Awesome RAG | Link | Why it matters | |---|---| | [langchain-ai/langchain](https://github.com/langchain-ai/langchain) | Composable primitives for RAG and tool use | | [langchain-ai/langgraph](https://github.com/langchain-ai/langgraph) | Graph and state orchestration for RAG and agents | | [run-llama/llama_index](http",
    "content": "# Awesome RAG | Link | Why it matters | |---|---| | [langchain-ai/langchain](https://github.com/langchain-ai/langchain) | Composable primitives for RAG and tool use | | [langchain-ai/langgraph](https://github.com/langchain-ai/langgraph) | Graph and state orchestration for RAG and agents | | [run-llama/llama_index](https://github.com/run-llama/llama_index) | Data framework for indexing and retrieval | | [explodinggradients/ragas](https://github.com/explodinggradients/ragas) | Evaluate RAG quality and faithfulness | | [pgvector/pgvector](https://github.com/pgvector/pgvector) | Vector similarity search inside Postgres | | [qdrant/qdrant](https://github.com/qdrant/qdrant) | Open source vector database | | [weaviate/weaviate](https://github.com/weaviate/weaviate) | Vector database with hybrid search |"
  },
  {
    "id": "03-awesome/awesome-vector-dbs.md",
    "title": "Awesome Vector Dbs",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/03-awesome/awesome-vector-dbs.md",
    "section": "Awesome",
    "path": "03-awesome/awesome-vector-dbs.md",
    "headings": [],
    "excerpt": "# Awesome Vector Databases | Link | Why it matters | |---|---| | [pgvector/pgvector](https://github.com/pgvector/pgvector) | Postgres extension for vector similarity | | [qdrant/qdrant](https://github.com/qdrant/qdrant) | Open source vector database | | [weaviate/weaviate](https://github.com/weaviate/weaviate) | Hybrid",
    "content": "# Awesome Vector Databases | Link | Why it matters | |---|---| | [pgvector/pgvector](https://github.com/pgvector/pgvector) | Postgres extension for vector similarity | | [qdrant/qdrant](https://github.com/qdrant/qdrant) | Open source vector database | | [weaviate/weaviate](https://github.com/weaviate/weaviate) | Hybrid search with modular extensions | | [milvus-io/milvus](https://github.com/milvus-io/milvus) | Distributed vector database | | [chroma-core/chroma](https://github.com/chroma-core/chroma) | Lightweight local vector store |"
  },
  {
    "id": "04-templates/bom-template.md",
    "title": "Bill of Materials Template",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/04-templates/bom-template.md",
    "section": "Templates",
    "path": "04-templates/bom-template.md",
    "headings": [
      {
        "level": 1,
        "text": "Bill of Materials Template"
      }
    ],
    "excerpt": "# Bill of Materials Template - Services & SKUs - Usage assumptions - Monthly estimate - Notes & tradeoffs",
    "content": "# Bill of Materials Template - Services & SKUs - Usage assumptions - Monthly estimate - Notes & tradeoffs"
  },
  {
    "id": "04-templates/discovery-questions.md",
    "title": "Discovery Questions Template",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/04-templates/discovery-questions.md",
    "section": "Templates",
    "path": "04-templates/discovery-questions.md",
    "headings": [
      {
        "level": 1,
        "text": "Discovery Questions Template"
      }
    ],
    "excerpt": "# Discovery Questions Template - Business goals, constraints, KPIs - Data sources, privacy, compliance - Users, workflows, SLAs - Risks and mitigations",
    "content": "# Discovery Questions Template - Business goals, constraints, KPIs - Data sources, privacy, compliance - Users, workflows, SLAs - Risks and mitigations"
  },
  {
    "id": "04-templates/solution-doc.md",
    "title": "Solution Document Template",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/04-templates/solution-doc.md",
    "section": "Templates",
    "path": "04-templates/solution-doc.md",
    "headings": [
      {
        "level": 1,
        "text": "Solution Document Template"
      }
    ],
    "excerpt": "# Solution Document Template - Problem & value - Architecture overview - Data flows & components - Security & compliance - Rollout & costs",
    "content": "# Solution Document Template - Problem & value - Architecture overview - Data flows & components - Security & compliance - Rollout & costs"
  },
  {
    "id": "04-templates/technical-architecture.md",
    "title": "Technical Architecture Template",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/04-templates/technical-architecture.md",
    "section": "Templates",
    "path": "04-templates/technical-architecture.md",
    "headings": [
      {
        "level": 1,
        "text": "Technical Architecture Template"
      }
    ],
    "excerpt": "# Technical Architecture Template - Context & assumptions - Component diagram - Data model - Scaling & SLOs - Observability",
    "content": "# Technical Architecture Template - Context & assumptions - Component diagram - Data model - Scaling & SLOs - Observability"
  },
  {
    "id": "04-templates/workshop-agenda.md",
    "title": "Workshop Agenda Template",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/04-templates/workshop-agenda.md",
    "section": "Templates",
    "path": "04-templates/workshop-agenda.md",
    "headings": [
      {
        "level": 1,
        "text": "Workshop Agenda Template"
      }
    ],
    "excerpt": "# Workshop Agenda Template - Intro & goals - Discovery questions - Architecture co-design - Risks & next steps",
    "content": "# Workshop Agenda Template - Intro & goals - Discovery questions - Architecture co-design - Risks & next steps"
  },
  {
    "id": "05-projects/100-projects.md",
    "title": "100 Projects for AI Architects (Starter Set)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/05-projects/100-projects.md",
    "section": "Projects",
    "path": "05-projects/100-projects.md",
    "headings": [
      {
        "level": 1,
        "text": "100 Projects for AI Architects (Starter Set)"
      }
    ],
    "excerpt": "# 100 Projects for AI Architects (Starter Set) Practical builds to master architecture by shipping. Sorted by theme; each project lists difficulty, estimated time, and links to guides or repos. Contribute: PR new projects with a short description, difficulty, est. hours, and links. Keep impact high and scope clear. | #",
    "content": "# 100 Projects for AI Architects (Starter Set) Practical builds to master architecture by shipping. Sorted by theme; each project lists difficulty, estimated time, and links to guides or repos. Contribute: PR new projects with a short description, difficulty, est. hours, and links. Keep impact high and scope clear. | # | Project | Theme | Difficulty | Est. Hours | Links | |---|---|---|---|---|---| | 1 | RAG on Supabase with Citations | RAG | Beginner | 8–12 | [Guide](rag-on-supabase.md) • [pgvector](https://github.com/pgvector/pgvector) | | 2 | Hybrid Search (BM25 + Vectors) | Retrieval | Intermediate | 6–10 | [Concepts](../03-awesome/awesome-vector-dbs.md) | | 3 | Chunking Strategies Benchmark | Retrieval | Intermediate | 6–10 | [RAGAS](https://github.com/explodinggradients/ragas) | | 4 | Evals Harness (Faithfulness, Coverage) | Evaluation | Intermediate | 6–10 | [Langfuse](https://github.com/langfuse/langfuse) | | 5 | Cost Guardrails & Caching Layer | Ops | Intermediate | 6–10 | [openai-cookbook](https://github.com/openai/openai-cookbook) | | 6 | Agent with Tools (Web + DB) | Agents | Intermediate | 10–14 | [LangGraph](https://github.com/langchain-ai/langgraph) | | 7 | Multi-Agent Workflow (Reviewer Loops) | Agents | Advanced | 12–18 | [AutoGen](https://github.com/microsoft/autogen) | | 8 | Observability Dash (Traces, Costs) | Observability | Intermediate | 6–10 | [Langfuse](https://github.com/langfuse/langfuse) | | 9 | Prompt Registry + Versioning | MLOps | Intermediate | 6–10 | [promptfoo](https://github.com/promptfoo/promptfoo) | | 10 | Model Serving with vLLM | Serving | Intermediate | 8–12 | [vLLM](https://github.com/vllm-project/vllm) | | 11 | Local Inference Prototype | Edge | Beginner | 4–8 | [llama.cpp](https://github.com/ggerganov/llama.cpp) | | 12 | Orchestration with Temporal | Orchestration | Intermediate | 8–12 | [Temporal TS](https://github.com/temporalio/sdk-typescript) | | 13 | Vector DB Benchmarks (Qdrant/Weaviate/Milvus) | Retrieval | Advanced |"
  },
  {
    "id": "05-projects/agentic-saas-planner.md",
    "title": "Project: Agentic SaaS Planner",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/05-projects/agentic-saas-planner.md",
    "section": "Projects",
    "path": "05-projects/agentic-saas-planner.md",
    "headings": [
      {
        "level": 1,
        "text": "Project: Agentic SaaS Planner"
      },
      {
        "level": 2,
        "text": "Steps"
      },
      {
        "level": 2,
        "text": "Acceptance Criteria"
      },
      {
        "level": 2,
        "text": "Stretch"
      }
    ],
    "excerpt": "# Project: Agentic SaaS Planner Goal: Use a Planner → Worker → Reviewer swarm to produce a product plan, architecture, and build plan for a simple SaaS idea. ## Steps 1) Run the example 2) Add a agent to block release if risks are high 3) Extend output: Bill of Materials, API list, day-by-day build plan 4) Optional: St",
    "content": "# Project: Agentic SaaS Planner Goal: Use a Planner → Worker → Reviewer swarm to produce a product plan, architecture, and build plan for a simple SaaS idea. ## Steps 1) Run the example 2) Add a agent to block release if risks are high 3) Extend output: Bill of Materials, API list, day-by-day build plan 4) Optional: Streamlit UI button to export a PDF brief ## Acceptance Criteria - Outputs include target user, jobs-to-be-done, key features, risks, MVP outline - Technical plan includes components, data flow, APIs, eval plan - Reviewer summary is clear and actionable ## Stretch - Integrate LiteLLM to compare models (OpenAI vs Anthropic) - Add a test harness that verifies the plan includes eval metrics"
  },
  {
    "id": "05-projects/evals-langfuse.md",
    "title": "Evals Langfuse",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/05-projects/evals-langfuse.md",
    "section": "Projects",
    "path": "05-projects/evals-langfuse.md",
    "headings": [],
    "excerpt": "# Project: Evals with Langfuse - Instrument API endpoints with traces, latency, and cost spans - Create an evaluation dataset (Q/A with citations) - Implement scoring for faithfulness and helpfulness - Track versions and regressions with CI that fails on quality drops",
    "content": "# Project: Evals with Langfuse - Instrument API endpoints with traces, latency, and cost spans - Create an evaluation dataset (Q/A with citations) - Implement scoring for faithfulness and helpfulness - Track versions and regressions with CI that fails on quality drops"
  },
  {
    "id": "05-projects/rag-on-supabase.md",
    "title": "Rag On Supabase",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/05-projects/rag-on-supabase.md",
    "section": "Projects",
    "path": "05-projects/rag-on-supabase.md",
    "headings": [],
    "excerpt": "# Project: RAG on Supabase + OpenAI (Step-by-Step) 1. **Setup** - Create a Supabase project (EU recommended) and enable - Create tables: , - Secure OpenAI and YouTube API keys 2. **Ingest** - Fetch video transcripts, clean them, and segment into 200-400 token chunks at semantic boundaries - Compute embeddings (small mo",
    "content": "# Project: RAG on Supabase + OpenAI (Step-by-Step) 1. **Setup** - Create a Supabase project (EU recommended) and enable - Create tables: , - Secure OpenAI and YouTube API keys 2. **Ingest** - Fetch video transcripts, clean them, and segment into 200-400 token chunks at semantic boundaries - Compute embeddings (small model) and store vectors in 3. **Retrieval API** - Combine vector similarity with keyword search and re-ranking - Return chunks with timestamps and resource metadata 4. **Tutor Endpoint** - Compose a system prompt with rules (require citations, abstain on low confidence) - Retrieve top-k chunks, call OpenAI, and return answers with citations 5. **Evals and Observability** - Add Langfuse traces and build a small evaluation dataset (questions plus expected sources) - Track faithfulness and citation coverage 6. **Hardening** - Apply rate limits per user or tier and cache frequent queries - Add cost guardrails and alerts"
  },
  {
    "id": "05-projects/vector-search-pgvector.md",
    "title": "Vector Search Pgvector",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/05-projects/vector-search-pgvector.md",
    "section": "Projects",
    "path": "05-projects/vector-search-pgvector.md",
    "headings": [],
    "excerpt": "# Project: Vector Search with pgvector - Install the extension and prepare schema - Choose embedding model; test cosine versus inner product - Tune indexing (IVFFlat) and storage parameters - Benchmark recall and latency trade-offs, including hybrid search",
    "content": "# Project: Vector Search with pgvector - Install the extension and prepare schema - Choose embedding model; test cosine versus inner product - Tune indexing (IVFFlat) and storage parameters - Benchmark recall and latency trade-offs, including hybrid search"
  },
  {
    "id": "06-toolchains/agentic-swarms-stack.md",
    "title": "Reference Stack: Agentic Code Swarms",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/06-toolchains/agentic-swarms-stack.md",
    "section": "Toolchains",
    "path": "06-toolchains/agentic-swarms-stack.md",
    "headings": [
      {
        "level": 1,
        "text": "Reference Stack: Agentic Code Swarms"
      },
      {
        "level": 2,
        "text": "Runtime"
      },
      {
        "level": 2,
        "text": "Providers"
      },
      {
        "level": 2,
        "text": "Data & Memory"
      },
      {
        "level": 2,
        "text": "Observability"
      },
      {
        "level": 2,
        "text": "Evals & Guardrails"
      },
      {
        "level": 2,
        "text": "Deployment"
      },
      {
        "level": 2,
        "text": "Security & Costs"
      }
    ],
    "excerpt": "# Reference Stack: Agentic Code Swarms ## Runtime - Python 3.11, , , - Orchestrations: sequential, P–W–R, round‑robin, map‑reduce - UI: Streamlit Explorer for learning and demos ## Providers - LiteLLM routing (OpenAI, Anthropic, etc.) - Offline mock provider for classrooms ## Data & Memory - Vector DB: pgvector or Qdra",
    "content": "# Reference Stack: Agentic Code Swarms ## Runtime - Python 3.11, , , - Orchestrations: sequential, P–W–R, round‑robin, map‑reduce - UI: Streamlit Explorer for learning and demos ## Providers - LiteLLM routing (OpenAI, Anthropic, etc.) - Offline mock provider for classrooms ## Data & Memory - Vector DB: pgvector or Qdrant (optional for advanced tools) - Cache: Redis for short‑term memory (optional) ## Observability - Tracing: OpenTelemetry export from agents (future) - Logs: structured JSON logs per agent step ## Evals & Guardrails - Metrics: task success, latency, cost - Harness: deterministic prompts + expected checks ## Deployment - Dockerfile provided; run Streamlit on 8501 - Suggested: Fly.io/Render for demos; Kubernetes for internal portals ## Security & Costs - Secrets via or platform secret store - Budget limits per run; circuit breakers on failure counts"
  },
  {
    "id": "06-toolchains/stack-reference.md",
    "title": "Stack Reference",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/06-toolchains/stack-reference.md",
    "section": "Toolchains",
    "path": "06-toolchains/stack-reference.md",
    "headings": [
      {
        "level": 1,
        "text": "Stack Reference"
      }
    ],
    "excerpt": "# Stack Reference - Frontend: Next.js, Tailwind - API: Node/Express - DB: Supabase (Postgres + pgvector) - AI: OpenAI (with OSS fallback) - Obs: Sentry, Langfuse",
    "content": "# Stack Reference - Frontend: Next.js, Tailwind - API: Node/Express - DB: Supabase (Postgres + pgvector) - AI: OpenAI (with OSS fallback) - Obs: Sentry, Langfuse"
  },
  {
    "id": "07-evaluation/eval-harness.md",
    "title": "Eval Harness",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/07-evaluation/eval-harness.md",
    "section": "Evaluation",
    "path": "07-evaluation/eval-harness.md",
    "headings": [
      {
        "level": 1,
        "text": "Eval Harness"
      }
    ],
    "excerpt": "# Eval Harness - Dataset format - Scoring functions - CI integration",
    "content": "# Eval Harness - Dataset format - Scoring functions - CI integration"
  },
  {
    "id": "07-evaluation/metrics.md",
    "title": "Evaluation Metrics",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/07-evaluation/metrics.md",
    "section": "Evaluation",
    "path": "07-evaluation/metrics.md",
    "headings": [
      {
        "level": 1,
        "text": "Evaluation Metrics"
      }
    ],
    "excerpt": "# Evaluation Metrics - Faithfulness, groundedness, factuality - Relevance, recall@k, MRR - UX metrics: satisfaction, time-to-answer",
    "content": "# Evaluation Metrics - Faithfulness, groundedness, factuality - Relevance, recall@k, MRR - UX metrics: satisfaction, time-to-answer"
  },
  {
    "id": "08-governance/model-risk.md",
    "title": "Model Risk Management",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/08-governance/model-risk.md",
    "section": "Governance",
    "path": "08-governance/model-risk.md",
    "headings": [
      {
        "level": 1,
        "text": "Model Risk Management"
      }
    ],
    "excerpt": "# Model Risk Management - Risk taxonomy - Controls & monitoring - Review cadence",
    "content": "# Model Risk Management - Risk taxonomy - Controls & monitoring - Review cadence"
  },
  {
    "id": "08-governance/privacy-gdpr.md",
    "title": "Privacy & GDPR",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/08-governance/privacy-gdpr.md",
    "section": "Governance",
    "path": "08-governance/privacy-gdpr.md",
    "headings": [
      {
        "level": 1,
        "text": "Privacy & GDPR"
      }
    ],
    "excerpt": "# Privacy & GDPR - Data residency - Consent & retention - Data subject rights",
    "content": "# Privacy & GDPR - Data residency - Consent & retention - Data subject rights"
  },
  {
    "id": "09-articles/README.md",
    "title": "Articles",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/09-articles/README.md",
    "section": "Articles",
    "path": "09-articles/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Articles"
      }
    ],
    "excerpt": "# Articles - RAG in Production: Chunking, Hybrid Search, Evals - Grounded Tutoring: Enforcing Citations - Design Patterns for Enterprise AI - Agentic Code Swarms: Orchestration patterns, UX for agents, and pedagogy",
    "content": "# Articles - RAG in Production: Chunking, Hybrid Search, Evals - Grounded Tutoring: Enforcing Citations - Design Patterns for Enterprise AI - Agentic Code Swarms: Orchestration patterns, UX for agents, and pedagogy"
  },
  {
    "id": "10-resources/channels.md",
    "title": "Channels",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/channels.md",
    "section": "Resources",
    "path": "10-resources/channels.md",
    "headings": [],
    "excerpt": "# YouTube Channels (Curated) - Andrej Karpathy - https://www.youtube.com/@AndrejKarpathy - Sebastian Raschka - https://www.youtube.com/@SebastianRaschka - Hugging Face - https://www.youtube.com/@HuggingFace - LangChain - https://www.youtube.com/@LangChain - OpenAI - https://www.youtube.com/@OpenAI - MLOps Community - h",
    "content": "# YouTube Channels (Curated) - Andrej Karpathy - https://www.youtube.com/@AndrejKarpathy - Sebastian Raschka - https://www.youtube.com/@SebastianRaschka - Hugging Face - https://www.youtube.com/@HuggingFace - LangChain - https://www.youtube.com/@LangChain - OpenAI - https://www.youtube.com/@OpenAI - MLOps Community - https://www.youtube.com/@MLOps - Two Minute Papers (curate for depth) - https://www.youtube.com/@TwoMinutePapers"
  },
  {
    "id": "10-resources/papers.md",
    "title": "Papers & Reading",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/papers.md",
    "section": "Resources",
    "path": "10-resources/papers.md",
    "headings": [
      {
        "level": 1,
        "text": "Papers & Reading"
      }
    ],
    "excerpt": "# Papers & Reading - Attention Is All You Need - Rethinking RAG architectures (surveys) - Hallucination evaluation methods",
    "content": "# Papers & Reading - Attention Is All You Need - Rethinking RAG architectures (surveys) - Hallucination evaluation methods"
  },
  {
    "id": "10-resources/platforms.md",
    "title": "Platforms & Tools",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/platforms.md",
    "section": "Resources",
    "path": "10-resources/platforms.md",
    "headings": [
      {
        "level": 1,
        "text": "Platforms & Tools"
      }
    ],
    "excerpt": "# Platforms & Tools - Supabase — https://supabase.com/ - Vercel — https://vercel.com/ - Railway — https://railway.app/ - Fly.io — https://fly.io/ - Cloudflare — https://www.cloudflare.com/ - Stripe — https://stripe.com/ - Sentry — https://sentry.io/ - Langfuse — https://langfuse.com/",
    "content": "# Platforms & Tools - Supabase — https://supabase.com/ - Vercel — https://vercel.com/ - Railway — https://railway.app/ - Fly.io — https://fly.io/ - Cloudflare — https://www.cloudflare.com/ - Stripe — https://stripe.com/ - Sentry — https://sentry.io/ - Langfuse — https://langfuse.com/"
  },
  {
    "id": "10-resources/playlists.md",
    "title": "Playlists (First Pull Targets)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/playlists.md",
    "section": "Resources",
    "path": "10-resources/playlists.md",
    "headings": [
      {
        "level": 1,
        "text": "Playlists (First Pull Targets)"
      }
    ],
    "excerpt": "# Playlists (First Pull Targets) - Karpathy: Neural Networks, LLMs — https://www.youtube.com/@AndrejKarpathy/playlists - Hugging Face: Transformers — https://www.youtube.com/@HuggingFace/playlists - LangChain: RAG & Agents — https://www.youtube.com/@LangChain/playlists - OpenAI Dev — https://www.youtube.com/@OpenAI/pla",
    "content": "# Playlists (First Pull Targets) - Karpathy: Neural Networks, LLMs — https://www.youtube.com/@AndrejKarpathy/playlists - Hugging Face: Transformers — https://www.youtube.com/@HuggingFace/playlists - LangChain: RAG & Agents — https://www.youtube.com/@LangChain/playlists - OpenAI Dev — https://www.youtube.com/@OpenAI/playlists - MLOps Community Sessions — https://www.youtube.com/@MLOps/playlists"
  },
  {
    "id": "10-resources/repos.md",
    "title": "Repos",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/repos.md",
    "section": "Resources",
    "path": "10-resources/repos.md",
    "headings": [
      {
        "level": 2,
        "text": "Meta Aggregators"
      }
    ],
    "excerpt": "# Repositories to Know (With Links) | Link | Why it matters | |---|---| | [huggingface/transformers](https://github.com/huggingface/transformers) | Models and tokenizers: foundation for NLP and LLM projects | | [langchain-ai/langchain](https://github.com/langchain-ai/langchain) | RAG and tool orchestration; fast from p",
    "content": "# Repositories to Know (With Links) | Link | Why it matters | |---|---| | [huggingface/transformers](https://github.com/huggingface/transformers) | Models and tokenizers: foundation for NLP and LLM projects | | [langchain-ai/langchain](https://github.com/langchain-ai/langchain) | RAG and tool orchestration; fast from prototype to production | | [run-llama/llama_index](https://github.com/run-llama/llama_index) | Data framework for LLM applications | | [vllm-project/vllm](https://github.com/vllm-project/vllm) | High-throughput, low-latency serving | | [ggerganov/llama.cpp](https://github.com/ggerganov/llama.cpp) | Local inference on CPU and edge devices | | [ollama/ollama](https://github.com/ollama/ollama) | Local model runner and packaging | | [pgvector/pgvector](https://github.com/pgvector/pgvector) | Vector similarity inside Postgres | | [qdrant/qdrant](https://github.com/qdrant/qdrant) | Production-ready open source vector database | | [weaviate/weaviate](https://github.com/weaviate/weaviate) | Vector database with hybrid search | | [milvus-io/milvus](https://github.com/milvus-io/milvus) | Distributed vector database | | [langfuse/langfuse](https://github.com/langfuse/langfuse) | Observability for LLM applications | | [Arize-ai/phoenix](https://github.com/Arize-ai/phoenix) | Observability and analysis toolkit | | [promptfoo/promptfoo](https://github.com/promptfoo/promptfoo) | Prompt evaluations in CI | | [microsoft/autogen](https://github.com/microsoft/autogen) | Multi-agent framework | | [joaomdmoura/crewai](https://github.com/joaomdmoura/crewai) | Agent teams and workflows | ## Meta Aggregators | Link | Why it matters | |---|---| | [sindresorhus/awesome](https://github.com/sindresorhus/awesome) | Canonical index of awesome lists | | [awesome-machine-learning/awesome-machine-learning](https://github.com/awesome-machine-learning/awesome-machine-learning) | Broad machine learning resources | | [visenger/awesome-mlops](https://github.com/visenger/awesome-mlops) | Cu"
  },
  {
    "id": "10-resources/videos.md",
    "title": "Videos (Selected)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/10-resources/videos.md",
    "section": "Resources",
    "path": "10-resources/videos.md",
    "headings": [
      {
        "level": 1,
        "text": "Videos (Selected)"
      }
    ],
    "excerpt": "# Videos (Selected) - Karpathy: Intro to LLMs — https://www.youtube.com/watch?v=zjkBMFhNj_g - Raschka: LLM Evaluation — https://www.youtube.com/watch?v=Rr8a8Y3G9Vw - LangChain: RAG with pgvector — https://www.youtube.com/watch?v=b8bXqSxTq0E - Hugging Face: Transformers Intro — https://www.youtube.com/watch?v=G5RY_SUJih",
    "content": "# Videos (Selected) - Karpathy: Intro to LLMs — https://www.youtube.com/watch?v=zjkBMFhNj_g - Raschka: LLM Evaluation — https://www.youtube.com/watch?v=Rr8a8Y3G9Vw - LangChain: RAG with pgvector — https://www.youtube.com/watch?v=b8bXqSxTq0E - Hugging Face: Transformers Intro — https://www.youtube.com/watch?v=G5RY_SUJih4 - OpenAI: Dev Day Highlights — https://www.youtube.com/watch?v=U9mJuUkhUzk"
  },
  {
    "id": "11-hyperscalers/README.md",
    "title": "Hyperscalers (OCI • AWS • GCP • Azure)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/README.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Hyperscalers (OCI • AWS • GCP • Azure)"
      }
    ],
    "excerpt": "# Hyperscalers (OCI • AWS • GCP • Azure) Decision-focused guides to build GenAI/RAG on each cloud with links to official docs, vector options, and quick starts. - Oracle Cloud Infrastructure (OCI): - Amazon Web Services (AWS): - Google Cloud (GCP): - Microsoft Azure: See also: [Choose a Platform](choose-platform.md)",
    "content": "# Hyperscalers (OCI • AWS • GCP • Azure) Decision-focused guides to build GenAI/RAG on each cloud with links to official docs, vector options, and quick starts. - Oracle Cloud Infrastructure (OCI): - Amazon Web Services (AWS): - Google Cloud (GCP): - Microsoft Azure: See also: [Choose a Platform](choose-platform.md)"
  },
  {
    "id": "11-hyperscalers/aws/README.md",
    "title": "AWS for AI Architects",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/aws/README.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/aws/README.md",
    "headings": [
      {
        "level": 1,
        "text": "AWS for AI Architects"
      }
    ],
    "excerpt": "# AWS for AI Architects Key Services - Amazon Bedrock: managed GenAI (model providers) - OpenSearch Serverless: vector search; filters - Aurora/ RDS Postgres: pgvector support - Lambda, API Gateway, ECS/EKS for serving - Observability: CloudWatch + 3rd‑party Vector Options - OpenSearch kNN / Faiss under the hood - Auro",
    "content": "# AWS for AI Architects Key Services - Amazon Bedrock: managed GenAI (model providers) - OpenSearch Serverless: vector search; filters - Aurora/ RDS Postgres: pgvector support - Lambda, API Gateway, ECS/EKS for serving - Observability: CloudWatch + 3rd‑party Vector Options - OpenSearch kNN / Faiss under the hood - Aurora Postgres + pgvector Quick Start (RAG) 1) Ingest → embeddings → OpenSearch index or pgvector 2) Retrieval API: vector + BM25 hybrid; re‑rank if needed 3) Tutor API: Bedrock (or OpenAI) with citations 4) Logs & metrics; costs via CloudWatch + tags Docs & Links - Amazon Bedrock — https://aws.amazon.com/bedrock/ - OpenSearch Vector Search — https://docs.aws.amazon.com/opensearch-service/latest/developerguide/knn.html - Aurora pgvector — https://aws.amazon.com/blogs/database/amazon-aurora-postgresql-adhere-pgvector/"
  },
  {
    "id": "11-hyperscalers/azure/README.md",
    "title": "Azure for AI Architects",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/azure/README.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/azure/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Azure for AI Architects"
      }
    ],
    "excerpt": "# Azure for AI Architects Key Services - Azure OpenAI Service: GPT models with enterprise controls - Azure AI Search (Cognitive Search) with vectors - Cosmos DB vector, Azure Postgres + pgvector - Azure Functions / AKS for serving - Observability: App Insights + 3rd‑party Vector Options - Azure AI Search (vector) - Cos",
    "content": "# Azure for AI Architects Key Services - Azure OpenAI Service: GPT models with enterprise controls - Azure AI Search (Cognitive Search) with vectors - Cosmos DB vector, Azure Postgres + pgvector - Azure Functions / AKS for serving - Observability: App Insights + 3rd‑party Vector Options - Azure AI Search (vector) - Cosmos DB vector - Azure Postgres + pgvector Quick Start (RAG) 1) Choose vector: AI Search or pgvector 2) Retrieval API: vector + filters; optional rerank 3) Tutor API: Azure OpenAI with citations + safety 4) Monitor with App Insights; track costs Docs & Links - Azure OpenAI — https://learn.microsoft.com/azure/ai-services/openai/ - Azure AI Search Vector — https://learn.microsoft.com/azure/search/vector-search-overview - Cosmos DB Vector — https://learn.microsoft.com/azure/cosmos-db/vector-database"
  },
  {
    "id": "11-hyperscalers/choose-platform.md",
    "title": "Choose a Platform (Decision Guide)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/choose-platform.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/choose-platform.md",
    "headings": [
      {
        "level": 1,
        "text": "Choose a Platform (Decision Guide)"
      }
    ],
    "excerpt": "# Choose a Platform (Decision Guide) Criteria - Data residency & compliance (EU, HIPAA, ISO) - Managed vector search options and performance - GenAI service availability (models, safety) - Integration with data sources and identity - Cost transparency and predictable budgets - Lock‑in vs. portability (pgvector, open SD",
    "content": "# Choose a Platform (Decision Guide) Criteria - Data residency & compliance (EU, HIPAA, ISO) - Managed vector search options and performance - GenAI service availability (models, safety) - Integration with data sources and identity - Cost transparency and predictable budgets - Lock‑in vs. portability (pgvector, open SDKs) Quick Take - If you already use a cloud: pick native services (pgvector/managed vector + GenAI) and keep portability via open embeddings and RAG patterns. - If you need maximum portability and EU control: Postgres + pgvector + OpenAI/Anthropic with OSS fallbacks. Baseline Stack (All Clouds) - Postgres + pgvector or managed vector DB - Retrieval API (hybrid search), Tutor API (RAG with citations) - Observability (Langfuse/Phoenix), Evals (promptfoo/ragas) - AuthZ, rate limits, and cost guardrails"
  },
  {
    "id": "11-hyperscalers/gcp/README.md",
    "title": "Google Cloud for AI Architects",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/gcp/README.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/gcp/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Google Cloud for AI Architects"
      }
    ],
    "excerpt": "# Google Cloud for AI Architects Key Services - Vertex AI (GenAI Studio, endpoints) - AlloyDB AI: integrated vector embeddings; Cloud SQL pgvector - Cloud Run / GKE for serving - Observability: Cloud Logging/Trace + 3rd‑party Vector Options - AlloyDB AI vector; Cloud SQL pgvector - OpenSearch-compatible via partners Qu",
    "content": "# Google Cloud for AI Architects Key Services - Vertex AI (GenAI Studio, endpoints) - AlloyDB AI: integrated vector embeddings; Cloud SQL pgvector - Cloud Run / GKE for serving - Observability: Cloud Logging/Trace + 3rd‑party Vector Options - AlloyDB AI vector; Cloud SQL pgvector - OpenSearch-compatible via partners Quick Start (RAG) 1) Store embeddings in AlloyDB AI or Cloud SQL pgvector 2) Retrieval API: vector + keyword hybrid 3) Tutor API: Vertex AI models (or OpenAI) with citations 4) Traces/evals; pub/sub for ingestion Docs & Links - Vertex AI — https://cloud.google.com/vertex-ai - AlloyDB AI — https://cloud.google.com/alloydb/docs/ai - Cloud SQL pgvector — https://cloud.google.com/sql/docs/postgres/extensions/pgvector"
  },
  {
    "id": "11-hyperscalers/oci/README.md",
    "title": "OCI for AI Architects (Oracle Cloud Infrastructure)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/11-hyperscalers/oci/README.md",
    "section": "Hyperscalers",
    "path": "11-hyperscalers/oci/README.md",
    "headings": [
      {
        "level": 1,
        "text": "OCI for AI Architects (Oracle Cloud Infrastructure)"
      }
    ],
    "excerpt": "# OCI for AI Architects (Oracle Cloud Infrastructure) Key Services - GenAI Service: managed access to foundation models - Oracle Database 23ai: AI Vector Search + JSON Relational Duality - Autonomous Database: managed Oracle DB with vector - Functions/OKE: serverless and Kubernetes - Observability: Logging, APM; 3rd‑pa",
    "content": "# OCI for AI Architects (Oracle Cloud Infrastructure) Key Services - GenAI Service: managed access to foundation models - Oracle Database 23ai: AI Vector Search + JSON Relational Duality - Autonomous Database: managed Oracle DB with vector - Functions/OKE: serverless and Kubernetes - Observability: Logging, APM; 3rd‑party Langfuse/Sentry Vector Options - Oracle DB 23ai AI Vector Search (native) - Postgres (OCI) + pgvector Quick Start (RAG) 1) Store docs in Oracle DB 23ai (vector index) 2) Retrieval API: cosine similarity + lexical fallback 3) Tutor API: call GenAI Service/OpenAI with citations 4) Observability: traces, evals, cost budgets Docs & Links - Oracle GenAI Service — https://docs.oracle.com/en-us/iaas/Content/generative-ai/overview.htm - Database 23ai Vector Search — https://www.oracle.com/database/ai/ - JSON Relational Duality — https://www.oracle.com/database/json/"
  },
  {
    "id": "12-concepts/caching-and-observability.md",
    "title": "Caching & Observability",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/caching-and-observability.md",
    "section": "Concepts",
    "path": "12-concepts/caching-and-observability.md",
    "headings": [
      {
        "level": 1,
        "text": "Caching & Observability"
      }
    ],
    "excerpt": "# Caching & Observability - Semantic caches; TTL strategies; invalidation - Traces and spans for prompts, retrieval, answers - Cost tracking and dashboards",
    "content": "# Caching & Observability - Semantic caches; TTL strategies; invalidation - Traces and spans for prompts, retrieval, answers - Cost tracking and dashboards"
  },
  {
    "id": "12-concepts/cost-and-latency-slos.md",
    "title": "Cost & Latency SLOs",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/cost-and-latency-slos.md",
    "section": "Concepts",
    "path": "12-concepts/cost-and-latency-slos.md",
    "headings": [
      {
        "level": 1,
        "text": "Cost & Latency SLOs"
      }
    ],
    "excerpt": "# Cost & Latency SLOs - Budgets per feature/tier; alerts - Latency budgets per step; caching and batch - Model choice tradeoffs; fallback strategies",
    "content": "# Cost & Latency SLOs - Budgets per feature/tier; alerts - Latency budgets per step; caching and batch - Model choice tradeoffs; fallback strategies"
  },
  {
    "id": "12-concepts/embeddings-and-chunking.md",
    "title": "Embeddings & Chunking",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/embeddings-and-chunking.md",
    "section": "Concepts",
    "path": "12-concepts/embeddings-and-chunking.md",
    "headings": [
      {
        "level": 1,
        "text": "Embeddings & Chunking"
      }
    ],
    "excerpt": "# Embeddings & Chunking - Embedding model selection: cost vs quality - Chunking: semantic boundaries, window overlap, structure aware - Metadata: titles, headings, source, timestamps - Vector hygiene: dedupe, normalization, index tuning",
    "content": "# Embeddings & Chunking - Embedding model selection: cost vs quality - Chunking: semantic boundaries, window overlap, structure aware - Metadata: titles, headings, source, timestamps - Vector hygiene: dedupe, normalization, index tuning"
  },
  {
    "id": "12-concepts/eval-and-guardrails.md",
    "title": "Evaluation & Guardrails",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/eval-and-guardrails.md",
    "section": "Concepts",
    "path": "12-concepts/eval-and-guardrails.md",
    "headings": [
      {
        "level": 1,
        "text": "Evaluation & Guardrails"
      }
    ],
    "excerpt": "# Evaluation & Guardrails - Datasets: Q/A with citations; negative tests - Metrics: faithfulness, coverage, relevance, MRR - Guardrails: safety filters, policy checks, PII redaction",
    "content": "# Evaluation & Guardrails - Datasets: Q/A with citations; negative tests - Metrics: faithfulness, coverage, relevance, MRR - Guardrails: safety filters, policy checks, PII redaction"
  },
  {
    "id": "12-concepts/hybrid-search-and-reranking.md",
    "title": "Hybrid Search & Reranking",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/hybrid-search-and-reranking.md",
    "section": "Concepts",
    "path": "12-concepts/hybrid-search-and-reranking.md",
    "headings": [
      {
        "level": 1,
        "text": "Hybrid Search & Reranking"
      }
    ],
    "excerpt": "# Hybrid Search & Reranking - Combine BM25 and vectors for recall and precision - Reranking: cross-encoders or LLM rerankers - Filters and faceting; scoring and thresholds",
    "content": "# Hybrid Search & Reranking - Combine BM25 and vectors for recall and precision - Reranking: cross-encoders or LLM rerankers - Filters and faceting; scoring and thresholds"
  },
  {
    "id": "12-concepts/prompt-injection-and-security.md",
    "title": "Prompt Injection & Security",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/prompt-injection-and-security.md",
    "section": "Concepts",
    "path": "12-concepts/prompt-injection-and-security.md",
    "headings": [
      {
        "level": 1,
        "text": "Prompt Injection & Security"
      }
    ],
    "excerpt": "# Prompt Injection & Security - Threats: injection, data exfiltration, jailbreaking - Controls: isolation, allowlists, output validation, sandboxing - Monitoring: anomaly detection, logging, forensics",
    "content": "# Prompt Injection & Security - Threats: injection, data exfiltration, jailbreaking - Controls: isolation, allowlists, output validation, sandboxing - Monitoring: anomaly detection, logging, forensics"
  },
  {
    "id": "12-concepts/rag-architecture.md",
    "title": "RAG Architecture (Deep Dive)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/12-concepts/rag-architecture.md",
    "section": "Concepts",
    "path": "12-concepts/rag-architecture.md",
    "headings": [
      {
        "level": 1,
        "text": "RAG Architecture (Deep Dive)"
      }
    ],
    "excerpt": "# RAG Architecture (Deep Dive) - Indexing pipeline: cleaning, chunking, embeddings, metadata - Retrieval: vector similarity + lexical; filters; rerankers - Answering: prompts with rules (citations), abstain paths - Quality: faithfulness, coverage, latency, cost",
    "content": "# RAG Architecture (Deep Dive) - Indexing pipeline: cleaning, chunking, embeddings, metadata - Retrieval: vector similarity + lexical; filters; rerankers - Answering: prompts with rules (citations), abstain paths - Quality: faithfulness, coverage, latency, cost"
  },
  {
    "id": "13-platforms/README.md",
    "title": "Platforms to Know",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/README.md",
    "section": "Platforms",
    "path": "13-platforms/README.md",
    "headings": [
      {
        "level": 1,
        "text": "Platforms to Know"
      }
    ],
    "excerpt": "# Platforms to Know - Databricks: Lakehouse, MLflow, vector search integrations - Snowflake: Cortex, Snowflake Native Apps, pgvector via partners - Elastic: Elasticsearch vector, hybrid search, relevance - Neo4j: Knowledge graphs and RAG enrichment - Pinecone/Weaviate/Qdrant/Milvus: managed and OSS vector DBs - Redis: ",
    "content": "# Platforms to Know - Databricks: Lakehouse, MLflow, vector search integrations - Snowflake: Cortex, Snowflake Native Apps, pgvector via partners - Elastic: Elasticsearch vector, hybrid search, relevance - Neo4j: Knowledge graphs and RAG enrichment - Pinecone/Weaviate/Qdrant/Milvus: managed and OSS vector DBs - Redis: Redis Stack with vectors, caching for LLM apps"
  },
  {
    "id": "13-platforms/databricks.md",
    "title": "Databricks",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/databricks.md",
    "section": "Platforms",
    "path": "13-platforms/databricks.md",
    "headings": [
      {
        "level": 1,
        "text": "Databricks"
      }
    ],
    "excerpt": "# Databricks - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Databricks - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/elasticsearch.md",
    "title": "Elasticsearch",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/elasticsearch.md",
    "section": "Platforms",
    "path": "13-platforms/elasticsearch.md",
    "headings": [
      {
        "level": 1,
        "text": "Elasticsearch"
      }
    ],
    "excerpt": "# Elasticsearch - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Elasticsearch - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/milvus.md",
    "title": "Milvus",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/milvus.md",
    "section": "Platforms",
    "path": "13-platforms/milvus.md",
    "headings": [
      {
        "level": 1,
        "text": "Milvus"
      }
    ],
    "excerpt": "# Milvus - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Milvus - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/neo4j.md",
    "title": "Neo4j",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/neo4j.md",
    "section": "Platforms",
    "path": "13-platforms/neo4j.md",
    "headings": [
      {
        "level": 1,
        "text": "Neo4j"
      }
    ],
    "excerpt": "# Neo4j - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Neo4j - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/pinecone.md",
    "title": "Pinecone",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/pinecone.md",
    "section": "Platforms",
    "path": "13-platforms/pinecone.md",
    "headings": [
      {
        "level": 1,
        "text": "Pinecone"
      }
    ],
    "excerpt": "# Pinecone - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Pinecone - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/qdrant.md",
    "title": "Qdrant",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/qdrant.md",
    "section": "Platforms",
    "path": "13-platforms/qdrant.md",
    "headings": [
      {
        "level": 1,
        "text": "Qdrant"
      }
    ],
    "excerpt": "# Qdrant - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Qdrant - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/redis.md",
    "title": "Redis",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/redis.md",
    "section": "Platforms",
    "path": "13-platforms/redis.md",
    "headings": [
      {
        "level": 1,
        "text": "Redis"
      }
    ],
    "excerpt": "# Redis - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Redis - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/snowflake.md",
    "title": "Snowflake",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/snowflake.md",
    "section": "Platforms",
    "path": "13-platforms/snowflake.md",
    "headings": [
      {
        "level": 1,
        "text": "Snowflake"
      }
    ],
    "excerpt": "# Snowflake - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Snowflake - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "13-platforms/weaviate.md",
    "title": "Weaviate",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/13-platforms/weaviate.md",
    "section": "Platforms",
    "path": "13-platforms/weaviate.md",
    "headings": [
      {
        "level": 1,
        "text": "Weaviate"
      }
    ],
    "excerpt": "# Weaviate - What: - Why it matters: - How to use in RAG: - Links:",
    "content": "# Weaviate - What: - Why it matters: - How to use in RAG: - Links:"
  },
  {
    "id": "14-ai-tools/README.md",
    "title": "AI Coding Tools & Agents",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/README.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/README.md",
    "headings": [
      {
        "level": 1,
        "text": "AI Coding Tools & Agents"
      }
    ],
    "excerpt": "# AI Coding Tools & Agents Practical guidance for using AI coding assistants and agent tools effectively as an AI Architect. Covers setup, strengths/limits, and playbooks for pairing with your repo. Tools covered: - Claude Code (Anthropic) — deep reasoning in code; inline edits - Gemini Code Assist (Google) — cloud-nat",
    "content": "# AI Coding Tools & Agents Practical guidance for using AI coding assistants and agent tools effectively as an AI Architect. Covers setup, strengths/limits, and playbooks for pairing with your repo. Tools covered: - Claude Code (Anthropic) — deep reasoning in code; inline edits - Gemini Code Assist (Google) — cloud-native integrations - Codex CLI (open-source agentic interface) — repo-aware CLI workflows - Cerebras (Model Studio/Inference) — cost/perf options and CLI use - Aider (OSS) — Git-aware assistant via diffs/commits - Continue (OSS) — local/remote models inside VS Code/JetBrains - Cursor (editor) — AI-native IDE (commercial) - Devin (agent) — long-running coding agent (commercial; conceptual workflow) See also: and ."
  },
  {
    "id": "14-ai-tools/aider.md",
    "title": "Aider (OSS)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/aider.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/aider.md",
    "headings": [
      {
        "level": 1,
        "text": "Aider (OSS)"
      }
    ],
    "excerpt": "# Aider (OSS) - Repo: https://github.com/Aider-AI/aider - What: Git-aware CLI pair programmer; proposes diffs and commits. - Use: → in repo; ask for changes; review patches. - Tips: Use small, focused asks; rely on branch flows; run tests between steps.",
    "content": "# Aider (OSS) - Repo: https://github.com/Aider-AI/aider - What: Git-aware CLI pair programmer; proposes diffs and commits. - Use: → in repo; ask for changes; review patches. - Tips: Use small, focused asks; rely on branch flows; run tests between steps."
  },
  {
    "id": "14-ai-tools/cerebras.md",
    "title": "Cerebras (Models & CLI)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/cerebras.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/cerebras.md",
    "headings": [
      {
        "level": 1,
        "text": "Cerebras (Models & CLI)"
      }
    ],
    "excerpt": "# Cerebras (Models & CLI) - What: Efficient LLM inference and training offerings; explore CLI/SDK for cost/perf. - Info: https://www.cerebras.net/ and https://github.com/Cerebras - Use: For workloads needing lower-cost inference at scale; integrate via standard SDKs.",
    "content": "# Cerebras (Models & CLI) - What: Efficient LLM inference and training offerings; explore CLI/SDK for cost/perf. - Info: https://www.cerebras.net/ and https://github.com/Cerebras - Use: For workloads needing lower-cost inference at scale; integrate via standard SDKs."
  },
  {
    "id": "14-ai-tools/claude-code.md",
    "title": "Claude Code (Anthropic)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/claude-code.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/claude-code.md",
    "headings": [
      {
        "level": 1,
        "text": "Claude Code (Anthropic)"
      }
    ],
    "excerpt": "# Claude Code (Anthropic) - What: IDE and web assistant for code with strong reasoning and refactoring. - Setup: https://www.anthropic.com/claude - Use: Pair for big-picture refactors, doc generation, and design. Provide repo context (files, errors) and ask for patch diffs. - Tips: Prefer \"show me a minimal diff\"; iter",
    "content": "# Claude Code (Anthropic) - What: IDE and web assistant for code with strong reasoning and refactoring. - Setup: https://www.anthropic.com/claude - Use: Pair for big-picture refactors, doc generation, and design. Provide repo context (files, errors) and ask for patch diffs. - Tips: Prefer \"show me a minimal diff\"; iterate with test stubs; paste stack traces and failing tests."
  },
  {
    "id": "14-ai-tools/codex-cli.md",
    "title": "Codex CLI (Open-source agentic coding interface)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/codex-cli.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/codex-cli.md",
    "headings": [
      {
        "level": 1,
        "text": "Codex CLI (Open-source agentic coding interface)"
      }
    ],
    "excerpt": "# Codex CLI (Open-source agentic coding interface) - Repo: https://github.com/openai/codex - What: Terminal-centric agent that can plan, run commands, and patch files with your approval. - Use: Explain goals → let it propose a plan → approve tool calls → review diffs before applying. - Tips: Keep tasks atomic; commit o",
    "content": "# Codex CLI (Open-source agentic coding interface) - Repo: https://github.com/openai/codex - What: Terminal-centric agent that can plan, run commands, and patch files with your approval. - Use: Explain goals → let it propose a plan → approve tool calls → review diffs before applying. - Tips: Keep tasks atomic; commit often; use a separate branch."
  },
  {
    "id": "14-ai-tools/continue.md",
    "title": "Continue (OSS)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/continue.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/continue.md",
    "headings": [
      {
        "level": 1,
        "text": "Continue (OSS)"
      }
    ],
    "excerpt": "# Continue (OSS) - Repo: https://github.com/continuedev/continue - What: Open-source AI assistant inside VS Code/JetBrains; supports local/remote models. - Use: Install extension → configure providers → chat over code, run quick edits. - Tips: Add a context window with key files; save prompts as recipes.",
    "content": "# Continue (OSS) - Repo: https://github.com/continuedev/continue - What: Open-source AI assistant inside VS Code/JetBrains; supports local/remote models. - Use: Install extension → configure providers → chat over code, run quick edits. - Tips: Add a context window with key files; save prompts as recipes."
  },
  {
    "id": "14-ai-tools/cursor.md",
    "title": "Cursor (Editor)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/cursor.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/cursor.md",
    "headings": [
      {
        "level": 1,
        "text": "Cursor (Editor)"
      }
    ],
    "excerpt": "# Cursor (Editor) - Site: https://www.cursor.com/ - What: AI-first IDE with strong inline and repo-wide refactors (commercial). - Use: Great for day-to-day implementation; keep commits small; use integrated diff view.",
    "content": "# Cursor (Editor) - Site: https://www.cursor.com/ - What: AI-first IDE with strong inline and repo-wide refactors (commercial). - Use: Great for day-to-day implementation; keep commits small; use integrated diff view."
  },
  {
    "id": "14-ai-tools/devin.md",
    "title": "Devin (Agent)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/devin.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/devin.md",
    "headings": [
      {
        "level": 1,
        "text": "Devin (Agent)"
      }
    ],
    "excerpt": "# Devin (Agent) - Site: https://www.cognition.ai/ - What: Autonomous coding agent (commercial, limited access). Use this as a conceptual workflow: plan tasks → monitor progress → validate outputs. - Guidance: Even with autonomous agents, keep tight scopes, observable outputs, and manual review gates.",
    "content": "# Devin (Agent) - Site: https://www.cognition.ai/ - What: Autonomous coding agent (commercial, limited access). Use this as a conceptual workflow: plan tasks → monitor progress → validate outputs. - Guidance: Even with autonomous agents, keep tight scopes, observable outputs, and manual review gates."
  },
  {
    "id": "14-ai-tools/gemini-code-assist.md",
    "title": "Gemini Code Assist (Google)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/14-ai-tools/gemini-code-assist.md",
    "section": "Ai Tools",
    "path": "14-ai-tools/gemini-code-assist.md",
    "headings": [
      {
        "level": 1,
        "text": "Gemini Code Assist (Google)"
      }
    ],
    "excerpt": "# Gemini Code Assist (Google) - What: Code assistance integrated with Google Cloud and Vertex AI. - Setup: https://cloud.google.com/products/code-assist - Use: Cloud-native integrations (Vertex, GKE); ask for infra snippets and policy checks. - Tips: Keep prompts grounded with exact service names and links to docs.",
    "content": "# Gemini Code Assist (Google) - What: Code assistance integrated with Google Cloud and Vertex AI. - Setup: https://cloud.google.com/products/code-assist - Use: Cloud-native integrations (Vertex, GKE); ask for infra snippets and policy checks. - Tips: Keep prompts grounded with exact service names and links to docs."
  },
  {
    "id": "15-workflows/agentic-swarms.md",
    "title": "Workflows: Agentic Code Swarms",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/15-workflows/agentic-swarms.md",
    "section": "Workflows",
    "path": "15-workflows/agentic-swarms.md",
    "headings": [
      {
        "level": 1,
        "text": "Workflows: Agentic Code Swarms"
      },
      {
        "level": 2,
        "text": "Planner → Worker → Reviewer (P–W–R)"
      },
      {
        "level": 2,
        "text": "Round‑Robin with Ownership"
      },
      {
        "level": 2,
        "text": "Map‑Reduce"
      },
      {
        "level": 2,
        "text": "Operational Flow"
      }
    ],
    "excerpt": "# Workflows: Agentic Code Swarms ## Planner → Worker → Reviewer (P–W–R) - Use for small, well‑scoped tasks - Add for gated release when safety critical ## Round‑Robin with Ownership - Each agent updates a shared plan; ownership fields resolve conflicts - Good for brainstorming or multi‑discipline drafts ## Map‑Reduce -",
    "content": "# Workflows: Agentic Code Swarms ## Planner → Worker → Reviewer (P–W–R) - Use for small, well‑scoped tasks - Add for gated release when safety critical ## Round‑Robin with Ownership - Each agent updates a shared plan; ownership fields resolve conflicts - Good for brainstorming or multi‑discipline drafts ## Map‑Reduce - Fan‑out to N workers and aggregate; add deduplication and scoring ## Operational Flow 1) Goal defined with acceptance criteria 2) Orchestrator runs; traces captured 3) Evals check outputs; failures routed to triage 4) Approved outputs promoted to deliverables"
  },
  {
    "id": "15-workflows/ai-pair-programming.md",
    "title": "AI Pair Programming (Daily Flow)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/15-workflows/ai-pair-programming.md",
    "section": "Workflows",
    "path": "15-workflows/ai-pair-programming.md",
    "headings": [
      {
        "level": 1,
        "text": "AI Pair Programming (Daily Flow)"
      }
    ],
    "excerpt": "# AI Pair Programming (Daily Flow) 1) Plan: Write a short plan in the issue; define acceptance criteria. 2) Context: Share key files/errors; ask for a minimal diff. 3) Apply: Review patches; run tests; iterate. 4) Document: Update README/docs; generate changelog. 5) PR: Ask AI to draft PR summary; link to issues; reque",
    "content": "# AI Pair Programming (Daily Flow) 1) Plan: Write a short plan in the issue; define acceptance criteria. 2) Context: Share key files/errors; ask for a minimal diff. 3) Apply: Review patches; run tests; iterate. 4) Document: Update README/docs; generate changelog. 5) PR: Ask AI to draft PR summary; link to issues; request reviews. Tools: Aider/Continue/Claude Code. Keep changes small; commit early/often."
  },
  {
    "id": "15-workflows/issue-triage-with-linear.md",
    "title": "Issue Triage with Linear/GitHub",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/15-workflows/issue-triage-with-linear.md",
    "section": "Workflows",
    "path": "15-workflows/issue-triage-with-linear.md",
    "headings": [
      {
        "level": 1,
        "text": "Issue Triage with Linear/GitHub"
      }
    ],
    "excerpt": "# Issue Triage with Linear/GitHub - Triage template: priority, scope, acceptance tests - Use AI to cluster issues and propose epics - Auto-draft tasks from 100 Projects with tags and timeboxes",
    "content": "# Issue Triage with Linear/GitHub - Triage template: priority, scope, acceptance tests - Use AI to cluster issues and propose epics - Auto-draft tasks from 100 Projects with tags and timeboxes"
  },
  {
    "id": "15-workflows/pr-review-with-agents.md",
    "title": "PR Review with AI Agents",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/15-workflows/pr-review-with-agents.md",
    "section": "Workflows",
    "path": "15-workflows/pr-review-with-agents.md",
    "headings": [
      {
        "level": 1,
        "text": "PR Review with AI Agents"
      }
    ],
    "excerpt": "# PR Review with AI Agents - Generate PR descriptions with context and risk notes. - Ask AI for test cases and edge cases; run suggested tests. - Use prompt pack: and .",
    "content": "# PR Review with AI Agents - Generate PR descriptions with context and risk notes. - Ask AI for test cases and edge cases; run suggested tests. - Use prompt pack: and ."
  },
  {
    "id": "15-workflows/repo-maintenance-with-ai.md",
    "title": "Repo Maintenance with AI",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/15-workflows/repo-maintenance-with-ai.md",
    "section": "Workflows",
    "path": "15-workflows/repo-maintenance-with-ai.md",
    "headings": [
      {
        "level": 1,
        "text": "Repo Maintenance with AI"
      }
    ],
    "excerpt": "# Repo Maintenance with AI - Link checks (CI): keep external links fresh - Auto-generate TOCs and badges as needed - Prompt pack: - Batch sanitize links and add context blurbs per link",
    "content": "# Repo Maintenance with AI - Link checks (CI): keep external links fresh - Auto-generate TOCs and badges as needed - Prompt pack: - Batch sanitize links and add context blurbs per link"
  },
  {
    "id": "16-collaboration/agentic-teams.md",
    "title": "Agentic Teams: Roles, RACI, and Operating Model",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/16-collaboration/agentic-teams.md",
    "section": "Collaboration",
    "path": "16-collaboration/agentic-teams.md",
    "headings": [
      {
        "level": 1,
        "text": "Agentic Teams: Roles, RACI, and Operating Model"
      },
      {
        "level": 2,
        "text": "Roles"
      },
      {
        "level": 2,
        "text": "RACI (example)"
      },
      {
        "level": 2,
        "text": "Cadence"
      },
      {
        "level": 2,
        "text": "Guardrails"
      },
      {
        "level": 2,
        "text": "Artifacts"
      }
    ],
    "excerpt": "# Agentic Teams: Roles, RACI, and Operating Model ## Roles - Orchestrator (Architect): defines goals, orchestrations, and acceptance criteria - Agent Lead (Tech): designs agents, tools, error handling, and eval hooks - Data/Evals: defines metrics, datasets, and guardrails; triages failures - Platform: CI/CD, secrets, c",
    "content": "# Agentic Teams: Roles, RACI, and Operating Model ## Roles - Orchestrator (Architect): defines goals, orchestrations, and acceptance criteria - Agent Lead (Tech): designs agents, tools, error handling, and eval hooks - Data/Evals: defines metrics, datasets, and guardrails; triages failures - Platform: CI/CD, secrets, cost controls, observability - Product: scope, risks, UX, compliance sign‑offs ## RACI (example) - Plan: Product (A), Architect (R), Tech (C), Evals (C) - Build: Tech (A/R), Platform (C), Architect (C) - Evaluate: Evals (A/R), Tech (C), Product (C) - Ship: Platform (A/R), Product (C), Architect (C) ## Cadence - Daily: 15‑min swarm review (top failures, costs, blocked items) - Weekly: model/agent perf review; update evals and guardrails - Monthly: pattern retro; consolidate lessons into the playbook ## Guardrails - Budget envelopes per run and per environment - Red‑team prompts and jailbreak checks in CI - PII scans, citations required for claims, source attribution ## Artifacts - Goals → plans → traces → final deliverables - Architecture documents and BoMs - Eval dashboards with trend lines and incidents"
  },
  {
    "id": "16-collaboration/checklists.md",
    "title": "Checklists (Before/After)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/16-collaboration/checklists.md",
    "section": "Collaboration",
    "path": "16-collaboration/checklists.md",
    "headings": [
      {
        "level": 1,
        "text": "Checklists (Before/After)"
      }
    ],
    "excerpt": "# Checklists (Before/After) Before Asking - [ ] Define success in 1–2 sentences - [ ] Gather context (files, logs, env) - [ ] Decide output format (diff, plan, code, table) - [ ] Note constraints (performance, security, style) After Receiving - [ ] Sanity check: does it meet acceptance criteria? - [ ] Apply minimal dif",
    "content": "# Checklists (Before/After) Before Asking - [ ] Define success in 1–2 sentences - [ ] Gather context (files, logs, env) - [ ] Decide output format (diff, plan, code, table) - [ ] Note constraints (performance, security, style) After Receiving - [ ] Sanity check: does it meet acceptance criteria? - [ ] Apply minimal diff; run tests; lint - [ ] Add/adjust docs; create PR with summary - [ ] Capture follow‑ups as issues"
  },
  {
    "id": "16-collaboration/issue-templates.md",
    "title": "Issue Templates for AI Pairing",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/16-collaboration/issue-templates.md",
    "section": "Collaboration",
    "path": "16-collaboration/issue-templates.md",
    "headings": [
      {
        "level": 1,
        "text": "Issue Templates for AI Pairing"
      }
    ],
    "excerpt": "# Issue Templates for AI Pairing Feature - Objective - Acceptance criteria - Constraints / non‑goals - Context (links, files) - Definition of done Bug - Observed behavior & logs - Expected behavior - Repro steps - Env (OS, versions) - Hypothesis (optional)",
    "content": "# Issue Templates for AI Pairing Feature - Objective - Acceptance criteria - Constraints / non‑goals - Context (links, files) - Definition of done Bug - Observed behavior & logs - Expected behavior - Repro steps - Env (OS, versions) - Hypothesis (optional)"
  },
  {
    "id": "16-collaboration/prompting-guide.md",
    "title": "Prompting Guide (Structure & Recipes)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/16-collaboration/prompting-guide.md",
    "section": "Collaboration",
    "path": "16-collaboration/prompting-guide.md",
    "headings": [
      {
        "level": 1,
        "text": "Prompting Guide (Structure & Recipes)"
      }
    ],
    "excerpt": "# Prompting Guide (Structure & Recipes) Prompt Canvas - Role: what assistant is (e.g., senior TS engineer) - Task: the concrete outcome - Context: files, errors, versions, constraints - Output: format requirements (diff, table, steps) - Checks: tests, constraints, guardrails Example (Patch‑First) Recipes - Code Review:",
    "content": "# Prompting Guide (Structure & Recipes) Prompt Canvas - Role: what assistant is (e.g., senior TS engineer) - Task: the concrete outcome - Context: files, errors, versions, constraints - Output: format requirements (diff, table, steps) - Checks: tests, constraints, guardrails Example (Patch‑First) Recipes - Code Review: see - Test Generator: see - Refactor: see - Docs Writer: see - Pattern Drafter: see - RAG Eval: see"
  },
  {
    "id": "16-collaboration/working-with-ai.md",
    "title": "Working With AI Assistants (Playbook)",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/16-collaboration/working-with-ai.md",
    "section": "Collaboration",
    "path": "16-collaboration/working-with-ai.md",
    "headings": [
      {
        "level": 1,
        "text": "Working With AI Assistants (Playbook)"
      }
    ],
    "excerpt": "# Working With AI Assistants (Playbook) Goal: Get high‑quality, verifiable outcomes quickly while keeping control over scope, cost, and quality. Principles - Be specific: State goal, constraints, acceptance criteria, and non‑goals. - Provide context: File paths, snippets, errors, env, versions. - Ask for a plan: Have t",
    "content": "# Working With AI Assistants (Playbook) Goal: Get high‑quality, verifiable outcomes quickly while keeping control over scope, cost, and quality. Principles - Be specific: State goal, constraints, acceptance criteria, and non‑goals. - Provide context: File paths, snippets, errors, env, versions. - Ask for a plan: Have the AI outline steps; approve/refine. - Prefer minimal diffs: Request patch/diff instead of full files. - Verify: Run tests, check outputs, and ask for self‑checks. - Iterate: Small scopes → apply → re‑ask with updated context. When to use which tool - Editor‑native (Claude Code, Continue, Cursor): fast inline edits and refactors. - Git‑aware CLI (Aider, Codex CLI): patch‑first changes with review and commits. - Long‑running agents (Devin): exploratory tasks; keep guardrails and review gates. Common patterns - Spec → Tests → Code: Ask for acceptance tests before implementation. - Investigate → Hypothesize → Patch: Paste stack traces; ask for debugging steps. - Design Doc → Skeleton → Fill‑in: Draft and iterate on design before coding. Anti‑patterns - Vague asks; no acceptance criteria. - Oversized changes in one shot. - Blindly pasting generated code without review."
  },
  {
    "id": "README.md",
    "title": "AI Architect Academy — Command Center for Visionary Builders",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/README.md",
    "section": "README.md",
    "path": "README.md",
    "headings": [
      {
        "level": 1,
        "text": "AI Architect Academy — Command Center for Visionary Builders"
      },
      {
        "level": 2,
        "text": "Experience Promise"
      },
      {
        "level": 2,
        "text": "Why Clone the Repository"
      },
      {
        "level": 2,
        "text": "Platform Architecture — What Lives Where"
      },
      {
        "level": 2,
        "text": "AI Agent Field Guide"
      },
      {
        "level": 2,
        "text": "Signature Loops You Can Run This Week"
      },
      {
        "level": 2,
        "text": "Start Your Journey (Choose the Lane that Fits)"
      },
      {
        "level": 2,
        "text": "Operate with Confidence"
      },
      {
        "level": 2,
        "text": "Create Momentum for Your Brand & Community"
      },
      {
        "level": 2,
        "text": "Clone & Personalise the Repo"
      }
    ],
    "excerpt": "<p align=\"center\"><img src=\"assets/logo.svg\" width=\"420\" alt=\"AI Architect Academy\"></p> <p align=\"center\"> <a href=\"https://github.com/AI-Architect-Academy/ai-architect-academy/stargazers\"><img alt=\"Stars\" src=\"https://img.shields.io/github/stars/AI-Architect-Academy/ai-architect-academy?style=flat-square\"></a> <a hre",
    "content": "<p align=\"center\"><img src=\"assets/logo.svg\" width=\"420\" alt=\"AI Architect Academy\"></p> <p align=\"center\"> <a href=\"https://github.com/AI-Architect-Academy/ai-architect-academy/stargazers\"><img alt=\"Stars\" src=\"https://img.shields.io/github/stars/AI-Architect-Academy/ai-architect-academy?style=flat-square\"></a> <a href=\"https://github.com/AI-Architect-Academy/ai-architect-academy/pulls\"><img alt=\"PRs\" src=\"https://img.shields.io/badge/PRs-welcome-cyan?style=flat-square\"></a> <a href=\"https://ai-architect-academy.github.io/ai-architect-academy/\"><img alt=\"Pages\" src=\"https://img.shields.io/badge/Pages-live-green?style=flat-square\"></a> </p> # AI Architect Academy — Command Center for Visionary Builders Lead the conversations, ship the systems, and operate responsibly. This open playbook is your living hub for designing, building, and amplifying AI products with confidence. Every section is tuned for AI architects, founding teams, creators, and advisors who need trusted patterns, deep resources, and a brand-ready narrative to share with their community. <div align=\"center\"> <a href=\"START-HERE.md\"><img alt=\"Start Here\" src=\"https://img.shields.io/badge/Start-Now-cyan?style=for-the-badge\"></a> <a href=\"docs/experience.html\"><img alt=\"Explore the Experience\" src=\"https://img.shields.io/badge/Explore-Experience-purple?style=for-the-badge\"></a> <a href=\"https://github.com/AI-Architect-Academy/ai-architect-academy/archive/refs/heads/main.zip\"><img alt=\"Download\" src=\"https://img.shields.io/badge/Clone-Repo-black?style=for-the-badge\"></a> </div> ![Experience Map](assets/experience-map.svg) ## Experience Promise - **Precision guidance.** Persona journeys and cloning checklists live side-by-side so nobody wonders “where do I click next?” - **Pattern-first delivery.** Value framing, technical architecture, toolchains, and evaluation harnesses are wired into one flow. - **Shareable story.** Articles, resources, and brand voice prompts make it effortless to show progress to lea"
  },
  {
    "id": "START-HERE.md",
    "title": "Start Here — Spin Up Your AI Architect Command Center",
    "href": "https://github.com/AI-Architect-Academy/ai-architect-academy/blob/main/START-HERE.md",
    "section": "START HERE.md",
    "path": "START-HERE.md",
    "headings": [
      {
        "level": 1,
        "text": "Start Here — Spin Up Your AI Architect Command Center"
      },
      {
        "level": 2,
        "text": "Orientation Pulse (5 Minutes)"
      },
      {
        "level": 2,
        "text": "1. Choose Your Mission Profile"
      },
      {
        "level": 2,
        "text": "2. Map Your Architecture Playbook"
      },
      {
        "level": 2,
        "text": "3. Build Signature Value Loops"
      },
      {
        "level": 2,
        "text": "4. Instrument, Govern, and Operate"
      },
      {
        "level": 2,
        "text": "5. Amplify and Share the Story"
      },
      {
        "level": 2,
        "text": "6. Calibrate Your AI Agents"
      },
      {
        "level": 2,
        "text": "Clone & Personalise the Repo"
      },
      {
        "level": 2,
        "text": "Keep Exploring"
      }
    ],
    "excerpt": "# Start Here — Spin Up Your AI Architect Command Center You arrived because you want to ship real AI value, brief stakeholders with authority, and keep a living record of progress. This quickstart shows how to unlock momentum for yourself, your collaborators, and any Codex-style agents you invite into the workspace. ##",
    "content": "# Start Here — Spin Up Your AI Architect Command Center You arrived because you want to ship real AI value, brief stakeholders with authority, and keep a living record of progress. This quickstart shows how to unlock momentum for yourself, your collaborators, and any Codex-style agents you invite into the workspace. ## Orientation Pulse (5 Minutes) - **Scan the [Experience Hub](docs/experience.html).** Note the hero CTA, persona lanes, and cloning checklist. - **Bookmark your launchpad.** Pick the program below that matches your mission and share the link with anyone joining you. - **Prime your AI copilots.** Drop , , and into your agent context so it can act as concierge. ## 1. Choose Your Mission Profile | Persona | Highlights | Run This Playlist | | --- | --- | --- | | **Launchpad — First 100 Hours** | Get oriented fast, ship two proof points, document the wins. | [100-Hour AI Architect plan](02-learning-paths/100-hour-ai-architect.md) + [RAG on Supabase](05-projects/rag-on-supabase.md) + [Langfuse evals](05-projects/evals-langfuse.md). | | **Creator & Influencer Track** | Translate builds into content, workshops, and community activations. | [Beginner path](02-learning-paths/beginner.md), [Professional path](02-learning-paths/professional.md), plus [article outlines](09-articles/). | | **Enterprise & AI CoE Leadership** | Align product, platform, governance, and enablement around one story. | [Bootcamp](02-learning-paths/bootcamp.md), [Governance toolkit](08-governance/), [Collaboration rituals](16-collaboration/). | | **Advisors, Clients, Friends & Family** | Offer a guided tour, show proof, outline next steps. | [Experience page](docs/experience.html), [Projects catalog](docs/projects.html), [Templates](04-templates/). | ## 2. Map Your Architecture Playbook - **Patterns:** Start with [Content Generation](01-design-patterns/content-generation.md), [Decision Support](01-design-patterns/decision-support.md), and [Model Lifecycle Management](01-design-patterns/mod"
  }
]